/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2020-2021 Baldur Karlsson
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2022-2023 xiongya
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* Generated from Khronos's vk.xml:

* Copyright 2015-2022 The Khronos Group Inc.
* 
* SPDX-License-Identifier: Apache-2.0 OR MIT
* 
* This file, vk.xml, is the Vulkan API Registry. It is a critically important
* and normative part of the Vulkan Specification, including a canonical
* machine-readable definition of the API, parameter and member validation
* language incorporated into the Specification and reference pages, and other
* material which is registered by Khronos, such as tags used by extension and
* layer authors. The authoritative public version of vk.xml is maintained in
* the default branch (currently named main) of the Khronos Vulkan GitHub
* project. The authoritative private version is maintained in the default
* branch of the member gitlab server.
* 

******************************************************************************/
// This file is autogenerated with vk_xml_parser.py - any changes will be overwritten next time
// that script is run.
// $ ./vk_xml_parser.py

#pragma once

// this file is autogenerated, so don't worry about clang-format issues
// clang-format off
#define ENUM_VK_ENTRYPOINTS_BASE(Macro)\
			Macro(vkCreateInstance)\
			Macro(vkGetInstanceProcAddr)\
			Macro(vkEnumerateInstanceExtensionProperties)\
			Macro(vkEnumerateInstanceLayerProperties)

// Instance enumerate
#define ENUMERATE_VK_INSTANCE_API(Macro)\
		ENUMERATE_INSTANCEVK_VERSION_1_0(Macro)\
		ENUMERATE_INSTANCEVK_VERSION_1_1(Macro)\
		ENUMERATE_INSTANCEVK_KHR_SURFACE(Macro)\
		ENUMERATE_INSTANCEVK_KHR_SWAPCHAIN(Macro)\
		ENUMERATE_INSTANCEVK_KHR_DISPLAY(Macro)\
		ENUMERATE_INSTANCEVK_KHR_ANDROID_SURFACE(Macro)\
		ENUMERATE_INSTANCEVK_KHR_WIN32_SURFACE(Macro)\
		ENUMERATE_INSTANCEVK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2(Macro)\
		ENUMERATE_INSTANCEVK_KHR_DEVICE_GROUP_CREATION(Macro)\
		ENUMERATE_INSTANCEVK_KHR_EXTERNAL_MEMORY_CAPABILITIES(Macro)\
		ENUMERATE_INSTANCEVK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES(Macro)\
		ENUMERATE_INSTANCEVK_KHR_EXTERNAL_FENCE_CAPABILITIES(Macro)\
		ENUMERATE_INSTANCEVK_KHR_GET_SURFACE_CAPABILITIES2(Macro)\
		ENUMERATE_INSTANCEVK_EXT_SAMPLE_LOCATIONS(Macro)\
		ENUMERATE_INSTANCEVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
		ENUMERATE_INSTANCEVK_EXT_DEBUG_REPORT(Macro)
// Device enumerate
#define ENUMERATE_VK_DEVICE_API(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_0(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_1(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_2(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SWAPCHAIN(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_DEBUG_MARKER(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_TRANSFORM_FEEDBACK(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DEVICE_GROUP(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_MAINTENANCE1(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_MEMORY_FD(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_SEMAPHORE_FD(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_PUSH_DESCRIPTOR(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DESCRIPTOR_UPDATE_TEMPLATE(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_GOOGLE_DISPLAY_TIMING(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_HDR_METADATA(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_CREATE_RENDERPASS2(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SHARED_PRESENTABLE_IMAGE(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_FENCE_FD(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_SAMPLE_LOCATIONS(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_GET_MEMORY_REQUIREMENTS2(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SAMPLER_YCBCR_CONVERSION(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_BIND_MEMORY2(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_VALIDATION_CACHE(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_MAINTENANCE3(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DRAW_INDIRECT_COUNT(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
		ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_LINE_RASTERIZATION(Macro)

//Instance api local implements
#define ENUMERATE_VK_INSTANCE_API_LOCAL_IMPLEMENT(Macro)\
		ENUMERATE_DEVICEVK_VERSION_1_0(Macro)\
		ENUMERATE_DEVICEVK_VERSION_1_1(Macro)\
		ENUMERATE_DEVICEVK_KHR_SURFACE(Macro)\
		ENUMERATE_DEVICEVK_KHR_SWAPCHAIN(Macro)\
		ENUMERATE_DEVICEVK_KHR_DISPLAY(Macro)\
		ENUMERATE_DEVICEVK_KHR_ANDROID_SURFACE(Macro)\
		ENUMERATE_DEVICEVK_KHR_WIN32_SURFACE(Macro)\
		ENUMERATE_DEVICEVK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2(Macro)\
		ENUMERATE_DEVICEVK_KHR_DEVICE_GROUP_CREATION(Macro)\
		ENUMERATE_DEVICEVK_KHR_EXTERNAL_MEMORY_CAPABILITIES(Macro)\
		ENUMERATE_DEVICEVK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES(Macro)\
		ENUMERATE_DEVICEVK_KHR_EXTERNAL_FENCE_CAPABILITIES(Macro)\
		ENUMERATE_DEVICEVK_KHR_GET_SURFACE_CAPABILITIES2(Macro)\
		ENUMERATE_DEVICEVK_EXT_SAMPLE_LOCATIONS(Macro)\
		ENUMERATE_DEVICEVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
		ENUMERATE_DEVICEVK_EXT_DEBUG_REPORT(Macro)
//Instance api local implements
#define ENUMERATE_VK_DEVICE_API_LOCAL_IMPLEMENT(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_0(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_1(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_2(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SWAPCHAIN(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_DEBUG_MARKER(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_TRANSFORM_FEEDBACK(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DEVICE_GROUP(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_MAINTENANCE1(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_MEMORY_FD(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_SEMAPHORE_FD(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_PUSH_DESCRIPTOR(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DESCRIPTOR_UPDATE_TEMPLATE(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_GOOGLE_DISPLAY_TIMING(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_HDR_METADATA(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_CREATE_RENDERPASS2(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SHARED_PRESENTABLE_IMAGE(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_FENCE_FD(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_SAMPLE_LOCATIONS(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_GET_MEMORY_REQUIREMENTS2(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SAMPLER_YCBCR_CONVERSION(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_BIND_MEMORY2(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_VALIDATION_CACHE(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_MAINTENANCE3(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DRAW_INDIRECT_COUNT(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
		ENUMERATE_DEVICE_IMPLEMENTVK_EXT_LINE_RASTERIZATION(Macro)

//Instance api
//  VK_VERSION_1_0

#define ENUMERATE_INSTANCEVK_VERSION_1_0(Macro)\
			Macro(vkDestroyInstance)\
			Macro(vkEnumeratePhysicalDevices)\
			Macro(vkGetPhysicalDeviceFeatures)\
			Macro(vkGetPhysicalDeviceFormatProperties)\
			Macro(vkGetPhysicalDeviceImageFormatProperties)\
			Macro(vkGetPhysicalDeviceProperties)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties)\
			Macro(vkGetPhysicalDeviceMemoryProperties)\
			Macro(vkCreateDevice)\
			Macro(vkEnumerateDeviceExtensionProperties)\
			Macro(vkEnumerateDeviceLayerProperties)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties)

//  VK_VERSION_1_1

#define ENUMERATE_INSTANCEVK_VERSION_1_1(Macro)\
			Macro(vkEnumerateInstanceVersion)\
			Macro(vkEnumeratePhysicalDeviceGroups)\
			Macro(vkGetPhysicalDeviceFeatures2)\
			Macro(vkGetPhysicalDeviceProperties2)\
			Macro(vkGetPhysicalDeviceFormatProperties2)\
			Macro(vkGetPhysicalDeviceImageFormatProperties2)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties2)\
			Macro(vkGetPhysicalDeviceMemoryProperties2)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties2)\
			Macro(vkGetPhysicalDeviceExternalBufferProperties)\
			Macro(vkGetPhysicalDeviceExternalFenceProperties)\
			Macro(vkGetPhysicalDeviceExternalSemaphoreProperties)

//  VK_KHR_surface

#define ENUMERATE_INSTANCEVK_KHR_SURFACE(Macro)\
			Macro(vkDestroySurfaceKHR)\
			Macro(vkGetPhysicalDeviceSurfaceSupportKHR)\
			Macro(vkGetPhysicalDeviceSurfaceCapabilitiesKHR)\
			Macro(vkGetPhysicalDeviceSurfaceFormatsKHR)\
			Macro(vkGetPhysicalDeviceSurfacePresentModesKHR)

//  VK_KHR_swapchain

#define ENUMERATE_INSTANCEVK_KHR_SWAPCHAIN(Macro)\
			Macro(vkGetPhysicalDevicePresentRectanglesKHR)

//  VK_KHR_display

#define ENUMERATE_INSTANCEVK_KHR_DISPLAY(Macro)\
			Macro(vkGetPhysicalDeviceDisplayPropertiesKHR)\
			Macro(vkGetPhysicalDeviceDisplayPlanePropertiesKHR)\
			Macro(vkGetDisplayPlaneSupportedDisplaysKHR)\
			Macro(vkGetDisplayModePropertiesKHR)\
			Macro(vkCreateDisplayModeKHR)\
			Macro(vkGetDisplayPlaneCapabilitiesKHR)\
			Macro(vkCreateDisplayPlaneSurfaceKHR)

//  VK_KHR_android_surface
#ifdef VK_USE_PLATFORM_ANDROID_KHR
#define ENUMERATE_INSTANCEVK_KHR_ANDROID_SURFACE(Macro)\
			Macro(vkCreateAndroidSurfaceKHR)
#else 
#define ENUMERATE_INSTANCEVK_KHR_ANDROID_SURFACE(Macro)
#endif // VK_USE_PLATFORM_ANDROID_KHR

//  VK_KHR_win32_surface
#ifdef VK_USE_PLATFORM_WIN32_KHR
#define ENUMERATE_INSTANCEVK_KHR_WIN32_SURFACE(Macro)\
			Macro(vkCreateWin32SurfaceKHR)\
			Macro(vkGetPhysicalDeviceWin32PresentationSupportKHR)
#else 
#define ENUMERATE_INSTANCEVK_KHR_WIN32_SURFACE(Macro)
#endif // VK_USE_PLATFORM_WIN32_KHR

//  VK_KHR_get_physical_device_properties2

#define ENUMERATE_INSTANCEVK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2(Macro)\
			Macro(vkGetPhysicalDeviceFeatures2KHR)\
			Macro(vkGetPhysicalDeviceProperties2KHR)\
			Macro(vkGetPhysicalDeviceFormatProperties2KHR)\
			Macro(vkGetPhysicalDeviceImageFormatProperties2KHR)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties2KHR)\
			Macro(vkGetPhysicalDeviceMemoryProperties2KHR)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties2KHR)

//  VK_KHR_device_group_creation

#define ENUMERATE_INSTANCEVK_KHR_DEVICE_GROUP_CREATION(Macro)\
			Macro(vkEnumeratePhysicalDeviceGroupsKHR)

//  VK_KHR_external_memory_capabilities

#define ENUMERATE_INSTANCEVK_KHR_EXTERNAL_MEMORY_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalBufferPropertiesKHR)

//  VK_KHR_external_semaphore_capabilities

#define ENUMERATE_INSTANCEVK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalSemaphorePropertiesKHR)

//  VK_KHR_external_fence_capabilities

#define ENUMERATE_INSTANCEVK_KHR_EXTERNAL_FENCE_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalFencePropertiesKHR)

//  VK_KHR_get_surface_capabilities2

#define ENUMERATE_INSTANCEVK_KHR_GET_SURFACE_CAPABILITIES2(Macro)\
			Macro(vkGetPhysicalDeviceSurfaceCapabilities2KHR)\
			Macro(vkGetPhysicalDeviceSurfaceFormats2KHR)

//  VK_EXT_sample_locations

#define ENUMERATE_INSTANCEVK_EXT_SAMPLE_LOCATIONS(Macro)\
			Macro(vkGetPhysicalDeviceMultisamplePropertiesEXT)

//  VK_KHR_fragment_shading_rate

#define ENUMERATE_INSTANCEVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
			Macro(vkGetPhysicalDeviceFragmentShadingRatesKHR)

//  VK_EXT_debug_report

#define ENUMERATE_INSTANCEVK_EXT_DEBUG_REPORT(Macro)\
			Macro(vkCreateDebugReportCallbackEXT)\
			Macro(vkDestroyDebugReportCallbackEXT)\
			Macro(vkDebugReportMessageEXT)



// Device api
//  VK_VERSION_1_0

#define ENUMERATE_DEVICEVK_VERSION_1_0(Macro)\
			Macro(vkDestroyInstance)\
			Macro(vkEnumeratePhysicalDevices)\
			Macro(vkGetPhysicalDeviceFeatures)\
			Macro(vkGetPhysicalDeviceFormatProperties)\
			Macro(vkGetPhysicalDeviceImageFormatProperties)\
			Macro(vkGetPhysicalDeviceProperties)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties)\
			Macro(vkGetPhysicalDeviceMemoryProperties)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties)

//  VK_VERSION_1_1

#define ENUMERATE_DEVICEVK_VERSION_1_1(Macro)\
			Macro(vkEnumerateInstanceVersion)\
			Macro(vkEnumeratePhysicalDeviceGroups)\
			Macro(vkGetPhysicalDeviceFeatures2)\
			Macro(vkGetPhysicalDeviceProperties2)\
			Macro(vkGetPhysicalDeviceFormatProperties2)\
			Macro(vkGetPhysicalDeviceImageFormatProperties2)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties2)\
			Macro(vkGetPhysicalDeviceMemoryProperties2)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties2)\
			Macro(vkGetPhysicalDeviceExternalBufferProperties)\
			Macro(vkGetPhysicalDeviceExternalFenceProperties)\
			Macro(vkGetPhysicalDeviceExternalSemaphoreProperties)

//  VK_KHR_surface

#define ENUMERATE_DEVICEVK_KHR_SURFACE(Macro)\
			Macro(vkDestroySurfaceKHR)\
			Macro(vkGetPhysicalDeviceSurfaceSupportKHR)\
			Macro(vkGetPhysicalDeviceSurfaceCapabilitiesKHR)\
			Macro(vkGetPhysicalDeviceSurfaceFormatsKHR)\
			Macro(vkGetPhysicalDeviceSurfacePresentModesKHR)

//  VK_KHR_swapchain

#define ENUMERATE_DEVICEVK_KHR_SWAPCHAIN(Macro)\
			Macro(vkGetPhysicalDevicePresentRectanglesKHR)

//  VK_KHR_display

#define ENUMERATE_DEVICEVK_KHR_DISPLAY(Macro)\
			Macro(vkGetPhysicalDeviceDisplayPropertiesKHR)\
			Macro(vkGetPhysicalDeviceDisplayPlanePropertiesKHR)\
			Macro(vkGetDisplayPlaneSupportedDisplaysKHR)\
			Macro(vkGetDisplayModePropertiesKHR)\
			Macro(vkCreateDisplayModeKHR)\
			Macro(vkGetDisplayPlaneCapabilitiesKHR)\
			Macro(vkCreateDisplayPlaneSurfaceKHR)

//  VK_KHR_android_surface
#ifdef VK_USE_PLATFORM_ANDROID_KHR
#define ENUMERATE_DEVICEVK_KHR_ANDROID_SURFACE(Macro)\
			Macro(vkCreateAndroidSurfaceKHR)
#else 
#define ENUMERATE_DEVICEVK_KHR_ANDROID_SURFACE(Macro)
#endif // VK_USE_PLATFORM_ANDROID_KHR

//  VK_KHR_win32_surface
#ifdef VK_USE_PLATFORM_WIN32_KHR
#define ENUMERATE_DEVICEVK_KHR_WIN32_SURFACE(Macro)\
			Macro(vkCreateWin32SurfaceKHR)\
			Macro(vkGetPhysicalDeviceWin32PresentationSupportKHR)
#else 
#define ENUMERATE_DEVICEVK_KHR_WIN32_SURFACE(Macro)
#endif // VK_USE_PLATFORM_WIN32_KHR

//  VK_KHR_get_physical_device_properties2

#define ENUMERATE_DEVICEVK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2(Macro)\
			Macro(vkGetPhysicalDeviceFeatures2KHR)\
			Macro(vkGetPhysicalDeviceProperties2KHR)\
			Macro(vkGetPhysicalDeviceFormatProperties2KHR)\
			Macro(vkGetPhysicalDeviceImageFormatProperties2KHR)\
			Macro(vkGetPhysicalDeviceQueueFamilyProperties2KHR)\
			Macro(vkGetPhysicalDeviceMemoryProperties2KHR)\
			Macro(vkGetPhysicalDeviceSparseImageFormatProperties2KHR)

//  VK_KHR_device_group_creation

#define ENUMERATE_DEVICEVK_KHR_DEVICE_GROUP_CREATION(Macro)\
			Macro(vkEnumeratePhysicalDeviceGroupsKHR)

//  VK_KHR_external_memory_capabilities

#define ENUMERATE_DEVICEVK_KHR_EXTERNAL_MEMORY_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalBufferPropertiesKHR)

//  VK_KHR_external_semaphore_capabilities

#define ENUMERATE_DEVICEVK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalSemaphorePropertiesKHR)

//  VK_KHR_external_fence_capabilities

#define ENUMERATE_DEVICEVK_KHR_EXTERNAL_FENCE_CAPABILITIES(Macro)\
			Macro(vkGetPhysicalDeviceExternalFencePropertiesKHR)

//  VK_KHR_get_surface_capabilities2

#define ENUMERATE_DEVICEVK_KHR_GET_SURFACE_CAPABILITIES2(Macro)\
			Macro(vkGetPhysicalDeviceSurfaceCapabilities2KHR)\
			Macro(vkGetPhysicalDeviceSurfaceFormats2KHR)

//  VK_EXT_sample_locations

#define ENUMERATE_DEVICEVK_EXT_SAMPLE_LOCATIONS(Macro)\
			Macro(vkGetPhysicalDeviceMultisamplePropertiesEXT)

//  VK_KHR_fragment_shading_rate

#define ENUMERATE_DEVICEVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
			Macro(vkGetPhysicalDeviceFragmentShadingRatesKHR)

//  VK_EXT_debug_report

#define ENUMERATE_DEVICEVK_EXT_DEBUG_REPORT(Macro)\
			Macro(vkCreateDebugReportCallbackEXT)\
			Macro(vkDestroyDebugReportCallbackEXT)\
			Macro(vkDebugReportMessageEXT)



//Instance api local implements
//  VK_VERSION_1_0

#define ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_0(Macro)\
			Macro(vkGetDeviceProcAddr)\
			Macro(vkDestroyDevice)\
			Macro(vkGetDeviceQueue)\
			Macro(vkQueueSubmit)\
			Macro(vkQueueWaitIdle)\
			Macro(vkDeviceWaitIdle)\
			Macro(vkAllocateMemory)\
			Macro(vkFreeMemory)\
			Macro(vkMapMemory)\
			Macro(vkUnmapMemory)\
			Macro(vkFlushMappedMemoryRanges)\
			Macro(vkInvalidateMappedMemoryRanges)\
			Macro(vkGetDeviceMemoryCommitment)\
			Macro(vkBindBufferMemory)\
			Macro(vkBindImageMemory)\
			Macro(vkGetBufferMemoryRequirements)\
			Macro(vkGetImageMemoryRequirements)\
			Macro(vkGetImageSparseMemoryRequirements)\
			Macro(vkQueueBindSparse)\
			Macro(vkCreateFence)\
			Macro(vkDestroyFence)\
			Macro(vkResetFences)\
			Macro(vkGetFenceStatus)\
			Macro(vkWaitForFences)\
			Macro(vkCreateSemaphore)\
			Macro(vkDestroySemaphore)\
			Macro(vkCreateEvent)\
			Macro(vkDestroyEvent)\
			Macro(vkGetEventStatus)\
			Macro(vkSetEvent)\
			Macro(vkResetEvent)\
			Macro(vkCreateQueryPool)\
			Macro(vkDestroyQueryPool)\
			Macro(vkGetQueryPoolResults)\
			Macro(vkCreateBuffer)\
			Macro(vkDestroyBuffer)\
			Macro(vkCreateBufferView)\
			Macro(vkDestroyBufferView)\
			Macro(vkCreateImage)\
			Macro(vkDestroyImage)\
			Macro(vkGetImageSubresourceLayout)\
			Macro(vkCreateImageView)\
			Macro(vkDestroyImageView)\
			Macro(vkCreateShaderModule)\
			Macro(vkDestroyShaderModule)\
			Macro(vkCreatePipelineCache)\
			Macro(vkDestroyPipelineCache)\
			Macro(vkGetPipelineCacheData)\
			Macro(vkMergePipelineCaches)\
			Macro(vkCreateGraphicsPipelines)\
			Macro(vkCreateComputePipelines)\
			Macro(vkDestroyPipeline)\
			Macro(vkCreatePipelineLayout)\
			Macro(vkDestroyPipelineLayout)\
			Macro(vkCreateSampler)\
			Macro(vkDestroySampler)\
			Macro(vkCreateDescriptorSetLayout)\
			Macro(vkDestroyDescriptorSetLayout)\
			Macro(vkCreateDescriptorPool)\
			Macro(vkDestroyDescriptorPool)\
			Macro(vkResetDescriptorPool)\
			Macro(vkAllocateDescriptorSets)\
			Macro(vkFreeDescriptorSets)\
			Macro(vkUpdateDescriptorSets)\
			Macro(vkCreateFramebuffer)\
			Macro(vkDestroyFramebuffer)\
			Macro(vkCreateRenderPass)\
			Macro(vkDestroyRenderPass)\
			Macro(vkGetRenderAreaGranularity)\
			Macro(vkCreateCommandPool)\
			Macro(vkDestroyCommandPool)\
			Macro(vkResetCommandPool)\
			Macro(vkAllocateCommandBuffers)\
			Macro(vkFreeCommandBuffers)\
			Macro(vkBeginCommandBuffer)\
			Macro(vkEndCommandBuffer)\
			Macro(vkResetCommandBuffer)\
			Macro(vkCmdBindPipeline)\
			Macro(vkCmdSetViewport)\
			Macro(vkCmdSetScissor)\
			Macro(vkCmdSetLineWidth)\
			Macro(vkCmdSetDepthBias)\
			Macro(vkCmdSetBlendConstants)\
			Macro(vkCmdSetDepthBounds)\
			Macro(vkCmdSetStencilCompareMask)\
			Macro(vkCmdSetStencilWriteMask)\
			Macro(vkCmdSetStencilReference)\
			Macro(vkCmdBindDescriptorSets)\
			Macro(vkCmdBindIndexBuffer)\
			Macro(vkCmdBindVertexBuffers)\
			Macro(vkCmdDraw)\
			Macro(vkCmdDrawIndexed)\
			Macro(vkCmdDrawIndirect)\
			Macro(vkCmdDrawIndexedIndirect)\
			Macro(vkCmdDispatch)\
			Macro(vkCmdDispatchIndirect)\
			Macro(vkCmdCopyBuffer)\
			Macro(vkCmdCopyImage)\
			Macro(vkCmdBlitImage)\
			Macro(vkCmdCopyBufferToImage)\
			Macro(vkCmdCopyImageToBuffer)\
			Macro(vkCmdUpdateBuffer)\
			Macro(vkCmdFillBuffer)\
			Macro(vkCmdClearColorImage)\
			Macro(vkCmdClearDepthStencilImage)\
			Macro(vkCmdClearAttachments)\
			Macro(vkCmdResolveImage)\
			Macro(vkCmdSetEvent)\
			Macro(vkCmdResetEvent)\
			Macro(vkCmdWaitEvents)\
			Macro(vkCmdPipelineBarrier)\
			Macro(vkCmdBeginQuery)\
			Macro(vkCmdEndQuery)\
			Macro(vkCmdResetQueryPool)\
			Macro(vkCmdWriteTimestamp)\
			Macro(vkCmdCopyQueryPoolResults)\
			Macro(vkCmdPushConstants)\
			Macro(vkCmdBeginRenderPass)\
			Macro(vkCmdNextSubpass)\
			Macro(vkCmdEndRenderPass)\
			Macro(vkCmdExecuteCommands)

//  VK_VERSION_1_1

#define ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_1(Macro)\
			Macro(vkBindBufferMemory2)\
			Macro(vkBindImageMemory2)\
			Macro(vkGetDeviceGroupPeerMemoryFeatures)\
			Macro(vkCmdSetDeviceMask)\
			Macro(vkCmdDispatchBase)\
			Macro(vkGetImageMemoryRequirements2)\
			Macro(vkGetBufferMemoryRequirements2)\
			Macro(vkGetImageSparseMemoryRequirements2)\
			Macro(vkTrimCommandPool)\
			Macro(vkGetDeviceQueue2)\
			Macro(vkCreateSamplerYcbcrConversion)\
			Macro(vkDestroySamplerYcbcrConversion)\
			Macro(vkCreateDescriptorUpdateTemplate)\
			Macro(vkDestroyDescriptorUpdateTemplate)\
			Macro(vkUpdateDescriptorSetWithTemplate)\
			Macro(vkGetDescriptorSetLayoutSupport)

//  VK_VERSION_1_2

#define ENUMERATE_INSTANCE_IMPLEMENTVK_VERSION_1_2(Macro)\
			Macro(vkCmdDrawIndirectCount)\
			Macro(vkCmdDrawIndexedIndirectCount)\
			Macro(vkCreateRenderPass2)\
			Macro(vkCmdBeginRenderPass2)\
			Macro(vkCmdNextSubpass2)\
			Macro(vkCmdEndRenderPass2)\
			Macro(vkResetQueryPool)\
			Macro(vkGetSemaphoreCounterValue)\
			Macro(vkWaitSemaphores)\
			Macro(vkSignalSemaphore)\
			Macro(vkGetBufferDeviceAddress)\
			Macro(vkGetBufferOpaqueCaptureAddress)\
			Macro(vkGetDeviceMemoryOpaqueCaptureAddress)

//  VK_KHR_swapchain

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SWAPCHAIN(Macro)\
			Macro(vkCreateSwapchainKHR)\
			Macro(vkDestroySwapchainKHR)\
			Macro(vkGetSwapchainImagesKHR)\
			Macro(vkAcquireNextImageKHR)\
			Macro(vkQueuePresentKHR)\
			Macro(vkGetDeviceGroupPresentCapabilitiesKHR)\
			Macro(vkGetDeviceGroupSurfacePresentModesKHR)\
			Macro(vkAcquireNextImage2KHR)

//  VK_EXT_debug_marker

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_DEBUG_MARKER(Macro)\
			Macro(vkDebugMarkerSetObjectTagEXT)\
			Macro(vkDebugMarkerSetObjectNameEXT)\
			Macro(vkCmdDebugMarkerBeginEXT)\
			Macro(vkCmdDebugMarkerEndEXT)\
			Macro(vkCmdDebugMarkerInsertEXT)

//  VK_EXT_transform_feedback

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_TRANSFORM_FEEDBACK(Macro)\
			Macro(vkCmdBindTransformFeedbackBuffersEXT)\
			Macro(vkCmdBeginTransformFeedbackEXT)\
			Macro(vkCmdEndTransformFeedbackEXT)\
			Macro(vkCmdBeginQueryIndexedEXT)\
			Macro(vkCmdEndQueryIndexedEXT)\
			Macro(vkCmdDrawIndirectByteCountEXT)

//  VK_KHR_device_group

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DEVICE_GROUP(Macro)\
			Macro(vkGetDeviceGroupPeerMemoryFeaturesKHR)\
			Macro(vkCmdSetDeviceMaskKHR)\
			Macro(vkCmdDispatchBaseKHR)

//  VK_KHR_maintenance1

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_MAINTENANCE1(Macro)\
			Macro(vkTrimCommandPoolKHR)

//  VK_KHR_external_memory_fd

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_MEMORY_FD(Macro)\
			Macro(vkGetMemoryFdKHR)\
			Macro(vkGetMemoryFdPropertiesKHR)

//  VK_KHR_external_semaphore_fd

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_SEMAPHORE_FD(Macro)\
			Macro(vkImportSemaphoreFdKHR)\
			Macro(vkGetSemaphoreFdKHR)

//  VK_KHR_push_descriptor

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_PUSH_DESCRIPTOR(Macro)\
			Macro(vkCmdPushDescriptorSetKHR)\
			Macro(vkCmdPushDescriptorSetWithTemplateKHR)

//  VK_KHR_descriptor_update_template

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DESCRIPTOR_UPDATE_TEMPLATE(Macro)\
			Macro(vkCreateDescriptorUpdateTemplateKHR)\
			Macro(vkDestroyDescriptorUpdateTemplateKHR)\
			Macro(vkUpdateDescriptorSetWithTemplateKHR)

//  VK_GOOGLE_display_timing

#define ENUMERATE_INSTANCE_IMPLEMENTVK_GOOGLE_DISPLAY_TIMING(Macro)\
			Macro(vkGetRefreshCycleDurationGOOGLE)\
			Macro(vkGetPastPresentationTimingGOOGLE)

//  VK_EXT_hdr_metadata

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_HDR_METADATA(Macro)\
			Macro(vkSetHdrMetadataEXT)

//  VK_KHR_create_renderpass2

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_CREATE_RENDERPASS2(Macro)\
			Macro(vkCreateRenderPass2KHR)\
			Macro(vkCmdBeginRenderPass2KHR)\
			Macro(vkCmdNextSubpass2KHR)\
			Macro(vkCmdEndRenderPass2KHR)

//  VK_KHR_shared_presentable_image

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SHARED_PRESENTABLE_IMAGE(Macro)\
			Macro(vkGetSwapchainStatusKHR)

//  VK_KHR_external_fence_fd

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_EXTERNAL_FENCE_FD(Macro)\
			Macro(vkImportFenceFdKHR)\
			Macro(vkGetFenceFdKHR)

//  VK_EXT_sample_locations

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_SAMPLE_LOCATIONS(Macro)\
			Macro(vkCmdSetSampleLocationsEXT)

//  VK_KHR_get_memory_requirements2

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_GET_MEMORY_REQUIREMENTS2(Macro)\
			Macro(vkGetImageMemoryRequirements2KHR)\
			Macro(vkGetBufferMemoryRequirements2KHR)\
			Macro(vkGetImageSparseMemoryRequirements2KHR)

//  VK_KHR_sampler_ycbcr_conversion

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_SAMPLER_YCBCR_CONVERSION(Macro)\
			Macro(vkCreateSamplerYcbcrConversionKHR)\
			Macro(vkDestroySamplerYcbcrConversionKHR)

//  VK_KHR_bind_memory2

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_BIND_MEMORY2(Macro)\
			Macro(vkBindBufferMemory2KHR)\
			Macro(vkBindImageMemory2KHR)

//  VK_EXT_validation_cache

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_VALIDATION_CACHE(Macro)\
			Macro(vkCreateValidationCacheEXT)\
			Macro(vkDestroyValidationCacheEXT)\
			Macro(vkMergeValidationCachesEXT)\
			Macro(vkGetValidationCacheDataEXT)

//  VK_KHR_maintenance3

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_MAINTENANCE3(Macro)\
			Macro(vkGetDescriptorSetLayoutSupportKHR)

//  VK_KHR_draw_indirect_count

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_DRAW_INDIRECT_COUNT(Macro)\
			Macro(vkCmdDrawIndirectCountKHR)\
			Macro(vkCmdDrawIndexedIndirectCountKHR)

//  VK_KHR_fragment_shading_rate

#define ENUMERATE_INSTANCE_IMPLEMENTVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
			Macro(vkCmdSetFragmentShadingRateKHR)

//  VK_EXT_line_rasterization

#define ENUMERATE_INSTANCE_IMPLEMENTVK_EXT_LINE_RASTERIZATION(Macro)\
			Macro(vkCmdSetLineStippleEXT)



// Device api local implements
//  VK_VERSION_1_0

#define ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_0(Macro)\
			Macro(vkDestroyDevice)\
			Macro(vkGetDeviceQueue)\
			Macro(vkQueueSubmit)\
			Macro(vkQueueWaitIdle)\
			Macro(vkDeviceWaitIdle)\
			Macro(vkAllocateMemory)\
			Macro(vkFreeMemory)\
			Macro(vkMapMemory)\
			Macro(vkUnmapMemory)\
			Macro(vkFlushMappedMemoryRanges)\
			Macro(vkInvalidateMappedMemoryRanges)\
			Macro(vkGetDeviceMemoryCommitment)\
			Macro(vkBindBufferMemory)\
			Macro(vkBindImageMemory)\
			Macro(vkGetBufferMemoryRequirements)\
			Macro(vkGetImageMemoryRequirements)\
			Macro(vkGetImageSparseMemoryRequirements)\
			Macro(vkQueueBindSparse)\
			Macro(vkCreateFence)\
			Macro(vkDestroyFence)\
			Macro(vkResetFences)\
			Macro(vkGetFenceStatus)\
			Macro(vkWaitForFences)\
			Macro(vkCreateSemaphore)\
			Macro(vkDestroySemaphore)\
			Macro(vkCreateEvent)\
			Macro(vkDestroyEvent)\
			Macro(vkGetEventStatus)\
			Macro(vkSetEvent)\
			Macro(vkResetEvent)\
			Macro(vkCreateQueryPool)\
			Macro(vkDestroyQueryPool)\
			Macro(vkGetQueryPoolResults)\
			Macro(vkCreateBuffer)\
			Macro(vkDestroyBuffer)\
			Macro(vkCreateBufferView)\
			Macro(vkDestroyBufferView)\
			Macro(vkCreateImage)\
			Macro(vkDestroyImage)\
			Macro(vkGetImageSubresourceLayout)\
			Macro(vkCreateImageView)\
			Macro(vkDestroyImageView)\
			Macro(vkCreateShaderModule)\
			Macro(vkDestroyShaderModule)\
			Macro(vkCreatePipelineCache)\
			Macro(vkDestroyPipelineCache)\
			Macro(vkGetPipelineCacheData)\
			Macro(vkMergePipelineCaches)\
			Macro(vkCreateGraphicsPipelines)\
			Macro(vkCreateComputePipelines)\
			Macro(vkDestroyPipeline)\
			Macro(vkCreatePipelineLayout)\
			Macro(vkDestroyPipelineLayout)\
			Macro(vkCreateSampler)\
			Macro(vkDestroySampler)\
			Macro(vkCreateDescriptorSetLayout)\
			Macro(vkDestroyDescriptorSetLayout)\
			Macro(vkCreateDescriptorPool)\
			Macro(vkDestroyDescriptorPool)\
			Macro(vkResetDescriptorPool)\
			Macro(vkAllocateDescriptorSets)\
			Macro(vkFreeDescriptorSets)\
			Macro(vkUpdateDescriptorSets)\
			Macro(vkCreateFramebuffer)\
			Macro(vkDestroyFramebuffer)\
			Macro(vkCreateRenderPass)\
			Macro(vkDestroyRenderPass)\
			Macro(vkGetRenderAreaGranularity)\
			Macro(vkCreateCommandPool)\
			Macro(vkDestroyCommandPool)\
			Macro(vkResetCommandPool)\
			Macro(vkAllocateCommandBuffers)\
			Macro(vkFreeCommandBuffers)\
			Macro(vkBeginCommandBuffer)\
			Macro(vkEndCommandBuffer)\
			Macro(vkResetCommandBuffer)\
			Macro(vkCmdBindPipeline)\
			Macro(vkCmdSetViewport)\
			Macro(vkCmdSetScissor)\
			Macro(vkCmdSetLineWidth)\
			Macro(vkCmdSetDepthBias)\
			Macro(vkCmdSetBlendConstants)\
			Macro(vkCmdSetDepthBounds)\
			Macro(vkCmdSetStencilCompareMask)\
			Macro(vkCmdSetStencilWriteMask)\
			Macro(vkCmdSetStencilReference)\
			Macro(vkCmdBindDescriptorSets)\
			Macro(vkCmdBindIndexBuffer)\
			Macro(vkCmdBindVertexBuffers)\
			Macro(vkCmdDraw)\
			Macro(vkCmdDrawIndexed)\
			Macro(vkCmdDrawIndirect)\
			Macro(vkCmdDrawIndexedIndirect)\
			Macro(vkCmdDispatch)\
			Macro(vkCmdDispatchIndirect)\
			Macro(vkCmdCopyBuffer)\
			Macro(vkCmdCopyImage)\
			Macro(vkCmdBlitImage)\
			Macro(vkCmdCopyBufferToImage)\
			Macro(vkCmdCopyImageToBuffer)\
			Macro(vkCmdUpdateBuffer)\
			Macro(vkCmdFillBuffer)\
			Macro(vkCmdClearColorImage)\
			Macro(vkCmdClearDepthStencilImage)\
			Macro(vkCmdClearAttachments)\
			Macro(vkCmdResolveImage)\
			Macro(vkCmdSetEvent)\
			Macro(vkCmdResetEvent)\
			Macro(vkCmdWaitEvents)\
			Macro(vkCmdPipelineBarrier)\
			Macro(vkCmdBeginQuery)\
			Macro(vkCmdEndQuery)\
			Macro(vkCmdResetQueryPool)\
			Macro(vkCmdWriteTimestamp)\
			Macro(vkCmdCopyQueryPoolResults)\
			Macro(vkCmdPushConstants)\
			Macro(vkCmdBeginRenderPass)\
			Macro(vkCmdNextSubpass)\
			Macro(vkCmdEndRenderPass)\
			Macro(vkCmdExecuteCommands)

//  VK_VERSION_1_1

#define ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_1(Macro)\
			Macro(vkBindBufferMemory2)\
			Macro(vkBindImageMemory2)\
			Macro(vkGetDeviceGroupPeerMemoryFeatures)\
			Macro(vkCmdSetDeviceMask)\
			Macro(vkCmdDispatchBase)\
			Macro(vkGetImageMemoryRequirements2)\
			Macro(vkGetBufferMemoryRequirements2)\
			Macro(vkGetImageSparseMemoryRequirements2)\
			Macro(vkTrimCommandPool)\
			Macro(vkGetDeviceQueue2)\
			Macro(vkCreateSamplerYcbcrConversion)\
			Macro(vkDestroySamplerYcbcrConversion)\
			Macro(vkCreateDescriptorUpdateTemplate)\
			Macro(vkDestroyDescriptorUpdateTemplate)\
			Macro(vkUpdateDescriptorSetWithTemplate)\
			Macro(vkGetDescriptorSetLayoutSupport)

//  VK_VERSION_1_2

#define ENUMERATE_DEVICE_IMPLEMENTVK_VERSION_1_2(Macro)\
			Macro(vkCmdDrawIndirectCount)\
			Macro(vkCmdDrawIndexedIndirectCount)\
			Macro(vkCreateRenderPass2)\
			Macro(vkCmdBeginRenderPass2)\
			Macro(vkCmdNextSubpass2)\
			Macro(vkCmdEndRenderPass2)\
			Macro(vkResetQueryPool)\
			Macro(vkGetSemaphoreCounterValue)\
			Macro(vkWaitSemaphores)\
			Macro(vkSignalSemaphore)\
			Macro(vkGetBufferDeviceAddress)\
			Macro(vkGetBufferOpaqueCaptureAddress)\
			Macro(vkGetDeviceMemoryOpaqueCaptureAddress)

//  VK_KHR_swapchain

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SWAPCHAIN(Macro)\
			Macro(vkCreateSwapchainKHR)\
			Macro(vkDestroySwapchainKHR)\
			Macro(vkGetSwapchainImagesKHR)\
			Macro(vkAcquireNextImageKHR)\
			Macro(vkQueuePresentKHR)\
			Macro(vkGetDeviceGroupPresentCapabilitiesKHR)\
			Macro(vkGetDeviceGroupSurfacePresentModesKHR)\
			Macro(vkAcquireNextImage2KHR)

//  VK_EXT_debug_marker

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_DEBUG_MARKER(Macro)\
			Macro(vkDebugMarkerSetObjectTagEXT)\
			Macro(vkDebugMarkerSetObjectNameEXT)\
			Macro(vkCmdDebugMarkerBeginEXT)\
			Macro(vkCmdDebugMarkerEndEXT)\
			Macro(vkCmdDebugMarkerInsertEXT)

//  VK_EXT_transform_feedback

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_TRANSFORM_FEEDBACK(Macro)\
			Macro(vkCmdBindTransformFeedbackBuffersEXT)\
			Macro(vkCmdBeginTransformFeedbackEXT)\
			Macro(vkCmdEndTransformFeedbackEXT)\
			Macro(vkCmdBeginQueryIndexedEXT)\
			Macro(vkCmdEndQueryIndexedEXT)\
			Macro(vkCmdDrawIndirectByteCountEXT)

//  VK_KHR_device_group

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DEVICE_GROUP(Macro)\
			Macro(vkGetDeviceGroupPeerMemoryFeaturesKHR)\
			Macro(vkCmdSetDeviceMaskKHR)\
			Macro(vkCmdDispatchBaseKHR)

//  VK_KHR_maintenance1

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_MAINTENANCE1(Macro)\
			Macro(vkTrimCommandPoolKHR)

//  VK_KHR_external_memory_fd

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_MEMORY_FD(Macro)\
			Macro(vkGetMemoryFdKHR)\
			Macro(vkGetMemoryFdPropertiesKHR)

//  VK_KHR_external_semaphore_fd

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_SEMAPHORE_FD(Macro)\
			Macro(vkImportSemaphoreFdKHR)\
			Macro(vkGetSemaphoreFdKHR)

//  VK_KHR_push_descriptor

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_PUSH_DESCRIPTOR(Macro)\
			Macro(vkCmdPushDescriptorSetKHR)\
			Macro(vkCmdPushDescriptorSetWithTemplateKHR)

//  VK_KHR_descriptor_update_template

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DESCRIPTOR_UPDATE_TEMPLATE(Macro)\
			Macro(vkCreateDescriptorUpdateTemplateKHR)\
			Macro(vkDestroyDescriptorUpdateTemplateKHR)\
			Macro(vkUpdateDescriptorSetWithTemplateKHR)

//  VK_GOOGLE_display_timing

#define ENUMERATE_DEVICE_IMPLEMENTVK_GOOGLE_DISPLAY_TIMING(Macro)\
			Macro(vkGetRefreshCycleDurationGOOGLE)\
			Macro(vkGetPastPresentationTimingGOOGLE)

//  VK_EXT_hdr_metadata

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_HDR_METADATA(Macro)\
			Macro(vkSetHdrMetadataEXT)

//  VK_KHR_create_renderpass2

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_CREATE_RENDERPASS2(Macro)\
			Macro(vkCreateRenderPass2KHR)\
			Macro(vkCmdBeginRenderPass2KHR)\
			Macro(vkCmdNextSubpass2KHR)\
			Macro(vkCmdEndRenderPass2KHR)

//  VK_KHR_shared_presentable_image

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SHARED_PRESENTABLE_IMAGE(Macro)\
			Macro(vkGetSwapchainStatusKHR)

//  VK_KHR_external_fence_fd

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_EXTERNAL_FENCE_FD(Macro)\
			Macro(vkImportFenceFdKHR)\
			Macro(vkGetFenceFdKHR)

//  VK_EXT_sample_locations

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_SAMPLE_LOCATIONS(Macro)\
			Macro(vkCmdSetSampleLocationsEXT)

//  VK_KHR_get_memory_requirements2

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_GET_MEMORY_REQUIREMENTS2(Macro)\
			Macro(vkGetImageMemoryRequirements2KHR)\
			Macro(vkGetBufferMemoryRequirements2KHR)\
			Macro(vkGetImageSparseMemoryRequirements2KHR)

//  VK_KHR_sampler_ycbcr_conversion

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_SAMPLER_YCBCR_CONVERSION(Macro)\
			Macro(vkCreateSamplerYcbcrConversionKHR)\
			Macro(vkDestroySamplerYcbcrConversionKHR)

//  VK_KHR_bind_memory2

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_BIND_MEMORY2(Macro)\
			Macro(vkBindBufferMemory2KHR)\
			Macro(vkBindImageMemory2KHR)

//  VK_EXT_validation_cache

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_VALIDATION_CACHE(Macro)\
			Macro(vkCreateValidationCacheEXT)\
			Macro(vkDestroyValidationCacheEXT)\
			Macro(vkMergeValidationCachesEXT)\
			Macro(vkGetValidationCacheDataEXT)

//  VK_KHR_maintenance3

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_MAINTENANCE3(Macro)\
			Macro(vkGetDescriptorSetLayoutSupportKHR)

//  VK_KHR_draw_indirect_count

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_DRAW_INDIRECT_COUNT(Macro)\
			Macro(vkCmdDrawIndirectCountKHR)\
			Macro(vkCmdDrawIndexedIndirectCountKHR)

//  VK_KHR_fragment_shading_rate

#define ENUMERATE_DEVICE_IMPLEMENTVK_KHR_FRAGMENT_SHADING_RATE(Macro)\
			Macro(vkCmdSetFragmentShadingRateKHR)

//  VK_EXT_line_rasterization

#define ENUMERATE_DEVICE_IMPLEMENTVK_EXT_LINE_RASTERIZATION(Macro)\
			Macro(vkCmdSetLineStippleEXT)


