/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2020-2021 Baldur Karlsson
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2022-2023 xiongya
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* Generated from Khronos's vk.xml:

* Copyright 2015-2022 The Khronos Group Inc.
* 
* SPDX-License-Identifier: Apache-2.0 OR MIT
* 
* This file, vk.xml, is the Vulkan API Registry. It is a critically important
* and normative part of the Vulkan Specification, including a canonical
* machine-readable definition of the API, parameter and member validation
* language incorporated into the Specification and reference pages, and other
* material which is registered by Khronos, such as tags used by extension and
* layer authors. The authoritative public version of vk.xml is maintained in
* the default branch (currently named main) of the Khronos Vulkan GitHub
* project. The authoritative private version is maintained in the default
* branch of the member gitlab server.
* 

******************************************************************************/
// This file is autogenerated with vk_xml_parser.py - any changes will be overwritten next time
// that script is run.
// $ ./vk_xml_parser.py

#pragma once

// this file is autogenerated, so don't worry about clang-format issues
// clang-format off
#define VkEnumNameCase(Enum) case Enum: return #Enum;

inline char const* GetVkResultString( VkResult value){
	switch(value){
		VkEnumNameCase(VK_SUCCESS)
		VkEnumNameCase(VK_NOT_READY)
		VkEnumNameCase(VK_TIMEOUT)
		VkEnumNameCase(VK_EVENT_SET)
		VkEnumNameCase(VK_EVENT_RESET)
		VkEnumNameCase(VK_INCOMPLETE)
		VkEnumNameCase(VK_ERROR_OUT_OF_HOST_MEMORY)
		VkEnumNameCase(VK_ERROR_OUT_OF_DEVICE_MEMORY)
		VkEnumNameCase(VK_ERROR_INITIALIZATION_FAILED)
		VkEnumNameCase(VK_ERROR_DEVICE_LOST)
		VkEnumNameCase(VK_ERROR_MEMORY_MAP_FAILED)
		VkEnumNameCase(VK_ERROR_LAYER_NOT_PRESENT)
		VkEnumNameCase(VK_ERROR_EXTENSION_NOT_PRESENT)
		VkEnumNameCase(VK_ERROR_FEATURE_NOT_PRESENT)
		VkEnumNameCase(VK_ERROR_INCOMPATIBLE_DRIVER)
		VkEnumNameCase(VK_ERROR_TOO_MANY_OBJECTS)
		VkEnumNameCase(VK_ERROR_FORMAT_NOT_SUPPORTED)
		VkEnumNameCase(VK_ERROR_FRAGMENTED_POOL)
		VkEnumNameCase(VK_ERROR_UNKNOWN)
		VkEnumNameCase(VK_ERROR_OUT_OF_POOL_MEMORY)
		VkEnumNameCase(VK_ERROR_INVALID_EXTERNAL_HANDLE)
		VkEnumNameCase(VK_ERROR_FRAGMENTATION)
		VkEnumNameCase(VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS)
		VkEnumNameCase(VK_PIPELINE_COMPILE_REQUIRED)
		VkEnumNameCase(VK_ERROR_SURFACE_LOST_KHR)
		VkEnumNameCase(VK_ERROR_NATIVE_WINDOW_IN_USE_KHR)
		VkEnumNameCase(VK_SUBOPTIMAL_KHR)
		VkEnumNameCase(VK_ERROR_OUT_OF_DATE_KHR)
		VkEnumNameCase(VK_ERROR_INCOMPATIBLE_DISPLAY_KHR)
		VkEnumNameCase(VK_ERROR_VALIDATION_FAILED_EXT)
		VkEnumNameCase(VK_ERROR_INVALID_SHADER_NV)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT)
		VkEnumNameCase(VK_ERROR_NOT_PERMITTED_KHR)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_THREAD_IDLE_KHR)
		VkEnumNameCase(VK_THREAD_DONE_KHR)
		VkEnumNameCase(VK_OPERATION_DEFERRED_KHR)
		VkEnumNameCase(VK_OPERATION_NOT_DEFERRED_KHR)
		VkEnumNameCase(VK_ERROR_COMPRESSION_EXHAUSTED_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkStructureTypeString( VkStructureType value){
	switch(value){
		VkEnumNameCase(VK_STRUCTURE_TYPE_APPLICATION_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_SPARSE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FENCE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EVENT_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_BARRIER)
		VkEnumNameCase(VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_END_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_BARRIER_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEPENDENCY_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBMIT_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COPY_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_COPY_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_BLIT_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDERING_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PRESENT_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR)
#ifdef VK_USE_PLATFORM_XLIB_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR)
#endif // VK_USE_PLATFORM_XLIB_KHR
#ifdef VK_USE_PLATFORM_XCB_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR)
#endif // VK_USE_PLATFORM_XCB_KHR
#ifdef VK_USE_PLATFORM_WAYLAND_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR)
#endif // VK_USE_PLATFORM_WAYLAND_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_PROFILE_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_GET_MEMORY_PROPERTIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_BIND_MEMORY_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_PROFILES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_REFERENCE_LISTS_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_MVC_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX)
#ifdef VK_USE_PLATFORM_GGP

		VkEnumNameCase(VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP)
#endif // VK_USE_PLATFORM_GGP
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT)
#ifdef VK_USE_PLATFORM_VI_NN

		VkEnumNameCase(VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN)
#endif // VK_USE_PLATFORM_VI_NN
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_HDR_METADATA_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR)
#ifdef VK_USE_PLATFORM_IOS_MVK

		VkEnumNameCase(VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK)
#endif // VK_USE_PLATFORM_IOS_MVK
#ifdef VK_USE_PLATFORM_MACOS_MVK

		VkEnumNameCase(VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK)
#endif // VK_USE_PLATFORM_MACOS_MVK
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT)
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GEOMETRY_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT)
#ifdef VK_USE_PLATFORM_GGP

		VkEnumNameCase(VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP)
#endif // VK_USE_PLATFORM_GGP
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT)
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT)
#endif // VK_USE_PLATFORM_WIN32_KHR
#ifdef VK_USE_PLATFORM_WIN32_KHR

		VkEnumNameCase(VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT)
#endif // VK_USE_PLATFORM_WIN32_KHR
		VkEnumNameCase(VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PRESENT_ID_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV)
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
#ifdef VK_USE_PLATFORM_METAL_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT)
#endif // VK_USE_PLATFORM_METAL_EXT
		VkEnumNameCase(VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT)
#ifdef VK_USE_PLATFORM_DIRECTFB_EXT

		VkEnumNameCase(VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT)
#endif // VK_USE_PLATFORM_DIRECTFB_EXT
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI)
		VkEnumNameCase(VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT)
#ifdef VK_USE_PLATFORM_SCREEN_QNX

		VkEnumNameCase(VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX)
#endif // VK_USE_PLATFORM_SCREEN_QNX
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT)
		VkEnumNameCase(VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPipelineCacheHeaderVersionString( VkPipelineCacheHeaderVersion value){
	switch(value){
		VkEnumNameCase(VK_PIPELINE_CACHE_HEADER_VERSION_ONE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkObjectTypeString( VkObjectType value){
	switch(value){
		VkEnumNameCase(VK_OBJECT_TYPE_UNKNOWN)
		VkEnumNameCase(VK_OBJECT_TYPE_INSTANCE)
		VkEnumNameCase(VK_OBJECT_TYPE_PHYSICAL_DEVICE)
		VkEnumNameCase(VK_OBJECT_TYPE_DEVICE)
		VkEnumNameCase(VK_OBJECT_TYPE_QUEUE)
		VkEnumNameCase(VK_OBJECT_TYPE_SEMAPHORE)
		VkEnumNameCase(VK_OBJECT_TYPE_COMMAND_BUFFER)
		VkEnumNameCase(VK_OBJECT_TYPE_FENCE)
		VkEnumNameCase(VK_OBJECT_TYPE_DEVICE_MEMORY)
		VkEnumNameCase(VK_OBJECT_TYPE_BUFFER)
		VkEnumNameCase(VK_OBJECT_TYPE_IMAGE)
		VkEnumNameCase(VK_OBJECT_TYPE_EVENT)
		VkEnumNameCase(VK_OBJECT_TYPE_QUERY_POOL)
		VkEnumNameCase(VK_OBJECT_TYPE_BUFFER_VIEW)
		VkEnumNameCase(VK_OBJECT_TYPE_IMAGE_VIEW)
		VkEnumNameCase(VK_OBJECT_TYPE_SHADER_MODULE)
		VkEnumNameCase(VK_OBJECT_TYPE_PIPELINE_CACHE)
		VkEnumNameCase(VK_OBJECT_TYPE_PIPELINE_LAYOUT)
		VkEnumNameCase(VK_OBJECT_TYPE_RENDER_PASS)
		VkEnumNameCase(VK_OBJECT_TYPE_PIPELINE)
		VkEnumNameCase(VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT)
		VkEnumNameCase(VK_OBJECT_TYPE_SAMPLER)
		VkEnumNameCase(VK_OBJECT_TYPE_DESCRIPTOR_POOL)
		VkEnumNameCase(VK_OBJECT_TYPE_DESCRIPTOR_SET)
		VkEnumNameCase(VK_OBJECT_TYPE_FRAMEBUFFER)
		VkEnumNameCase(VK_OBJECT_TYPE_COMMAND_POOL)
		VkEnumNameCase(VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION)
		VkEnumNameCase(VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE)
		VkEnumNameCase(VK_OBJECT_TYPE_PRIVATE_DATA_SLOT)
		VkEnumNameCase(VK_OBJECT_TYPE_SURFACE_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_SWAPCHAIN_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_DISPLAY_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_DISPLAY_MODE_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_OBJECT_TYPE_VIDEO_SESSION_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_OBJECT_TYPE_CU_MODULE_NVX)
		VkEnumNameCase(VK_OBJECT_TYPE_CU_FUNCTION_NVX)
		VkEnumNameCase(VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT)
		VkEnumNameCase(VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_VALIDATION_CACHE_EXT)
		VkEnumNameCase(VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV)
		VkEnumNameCase(VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL)
		VkEnumNameCase(VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR)
		VkEnumNameCase(VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkVendorIdString( VkVendorId value){
	switch(value){
		VkEnumNameCase(VK_VENDOR_ID_VIV)
		VkEnumNameCase(VK_VENDOR_ID_VSI)
		VkEnumNameCase(VK_VENDOR_ID_KAZAN)
		VkEnumNameCase(VK_VENDOR_ID_CODEPLAY)
		VkEnumNameCase(VK_VENDOR_ID_MESA)
		VkEnumNameCase(VK_VENDOR_ID_POCL)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFormatString( VkFormat value){
	switch(value){
		VkEnumNameCase(VK_FORMAT_UNDEFINED)
		VkEnumNameCase(VK_FORMAT_R4G4_UNORM_PACK8)
		VkEnumNameCase(VK_FORMAT_R4G4B4A4_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_B4G4R4A4_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_R5G6B5_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_B5G6R5_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_R5G5B5A1_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_B5G5R5A1_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_A1R5G5B5_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_R8_UNORM)
		VkEnumNameCase(VK_FORMAT_R8_SNORM)
		VkEnumNameCase(VK_FORMAT_R8_USCALED)
		VkEnumNameCase(VK_FORMAT_R8_SSCALED)
		VkEnumNameCase(VK_FORMAT_R8_UINT)
		VkEnumNameCase(VK_FORMAT_R8_SINT)
		VkEnumNameCase(VK_FORMAT_R8_SRGB)
		VkEnumNameCase(VK_FORMAT_R8G8_UNORM)
		VkEnumNameCase(VK_FORMAT_R8G8_SNORM)
		VkEnumNameCase(VK_FORMAT_R8G8_USCALED)
		VkEnumNameCase(VK_FORMAT_R8G8_SSCALED)
		VkEnumNameCase(VK_FORMAT_R8G8_UINT)
		VkEnumNameCase(VK_FORMAT_R8G8_SINT)
		VkEnumNameCase(VK_FORMAT_R8G8_SRGB)
		VkEnumNameCase(VK_FORMAT_R8G8B8_UNORM)
		VkEnumNameCase(VK_FORMAT_R8G8B8_SNORM)
		VkEnumNameCase(VK_FORMAT_R8G8B8_USCALED)
		VkEnumNameCase(VK_FORMAT_R8G8B8_SSCALED)
		VkEnumNameCase(VK_FORMAT_R8G8B8_UINT)
		VkEnumNameCase(VK_FORMAT_R8G8B8_SINT)
		VkEnumNameCase(VK_FORMAT_R8G8B8_SRGB)
		VkEnumNameCase(VK_FORMAT_B8G8R8_UNORM)
		VkEnumNameCase(VK_FORMAT_B8G8R8_SNORM)
		VkEnumNameCase(VK_FORMAT_B8G8R8_USCALED)
		VkEnumNameCase(VK_FORMAT_B8G8R8_SSCALED)
		VkEnumNameCase(VK_FORMAT_B8G8R8_UINT)
		VkEnumNameCase(VK_FORMAT_B8G8R8_SINT)
		VkEnumNameCase(VK_FORMAT_B8G8R8_SRGB)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_UNORM)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_SNORM)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_USCALED)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_SSCALED)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_UINT)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_SINT)
		VkEnumNameCase(VK_FORMAT_R8G8B8A8_SRGB)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_UNORM)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_SNORM)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_USCALED)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_SSCALED)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_UINT)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_SINT)
		VkEnumNameCase(VK_FORMAT_B8G8R8A8_SRGB)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_UNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_SNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_USCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_SSCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_UINT_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_SINT_PACK32)
		VkEnumNameCase(VK_FORMAT_A8B8G8R8_SRGB_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_UNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_SNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_USCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_SSCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_UINT_PACK32)
		VkEnumNameCase(VK_FORMAT_A2R10G10B10_SINT_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_UNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_SNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_USCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_SSCALED_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_UINT_PACK32)
		VkEnumNameCase(VK_FORMAT_A2B10G10R10_SINT_PACK32)
		VkEnumNameCase(VK_FORMAT_R16_UNORM)
		VkEnumNameCase(VK_FORMAT_R16_SNORM)
		VkEnumNameCase(VK_FORMAT_R16_USCALED)
		VkEnumNameCase(VK_FORMAT_R16_SSCALED)
		VkEnumNameCase(VK_FORMAT_R16_UINT)
		VkEnumNameCase(VK_FORMAT_R16_SINT)
		VkEnumNameCase(VK_FORMAT_R16_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R16G16_UNORM)
		VkEnumNameCase(VK_FORMAT_R16G16_SNORM)
		VkEnumNameCase(VK_FORMAT_R16G16_USCALED)
		VkEnumNameCase(VK_FORMAT_R16G16_SSCALED)
		VkEnumNameCase(VK_FORMAT_R16G16_UINT)
		VkEnumNameCase(VK_FORMAT_R16G16_SINT)
		VkEnumNameCase(VK_FORMAT_R16G16_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R16G16B16_UNORM)
		VkEnumNameCase(VK_FORMAT_R16G16B16_SNORM)
		VkEnumNameCase(VK_FORMAT_R16G16B16_USCALED)
		VkEnumNameCase(VK_FORMAT_R16G16B16_SSCALED)
		VkEnumNameCase(VK_FORMAT_R16G16B16_UINT)
		VkEnumNameCase(VK_FORMAT_R16G16B16_SINT)
		VkEnumNameCase(VK_FORMAT_R16G16B16_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_UNORM)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_SNORM)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_USCALED)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_SSCALED)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_UINT)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_SINT)
		VkEnumNameCase(VK_FORMAT_R16G16B16A16_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R32_UINT)
		VkEnumNameCase(VK_FORMAT_R32_SINT)
		VkEnumNameCase(VK_FORMAT_R32_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R32G32_UINT)
		VkEnumNameCase(VK_FORMAT_R32G32_SINT)
		VkEnumNameCase(VK_FORMAT_R32G32_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R32G32B32_UINT)
		VkEnumNameCase(VK_FORMAT_R32G32B32_SINT)
		VkEnumNameCase(VK_FORMAT_R32G32B32_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R32G32B32A32_UINT)
		VkEnumNameCase(VK_FORMAT_R32G32B32A32_SINT)
		VkEnumNameCase(VK_FORMAT_R32G32B32A32_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R64_UINT)
		VkEnumNameCase(VK_FORMAT_R64_SINT)
		VkEnumNameCase(VK_FORMAT_R64_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R64G64_UINT)
		VkEnumNameCase(VK_FORMAT_R64G64_SINT)
		VkEnumNameCase(VK_FORMAT_R64G64_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R64G64B64_UINT)
		VkEnumNameCase(VK_FORMAT_R64G64B64_SINT)
		VkEnumNameCase(VK_FORMAT_R64G64B64_SFLOAT)
		VkEnumNameCase(VK_FORMAT_R64G64B64A64_UINT)
		VkEnumNameCase(VK_FORMAT_R64G64B64A64_SINT)
		VkEnumNameCase(VK_FORMAT_R64G64B64A64_SFLOAT)
		VkEnumNameCase(VK_FORMAT_B10G11R11_UFLOAT_PACK32)
		VkEnumNameCase(VK_FORMAT_E5B9G9R9_UFLOAT_PACK32)
		VkEnumNameCase(VK_FORMAT_D16_UNORM)
		VkEnumNameCase(VK_FORMAT_X8_D24_UNORM_PACK32)
		VkEnumNameCase(VK_FORMAT_D32_SFLOAT)
		VkEnumNameCase(VK_FORMAT_S8_UINT)
		VkEnumNameCase(VK_FORMAT_D16_UNORM_S8_UINT)
		VkEnumNameCase(VK_FORMAT_D24_UNORM_S8_UINT)
		VkEnumNameCase(VK_FORMAT_D32_SFLOAT_S8_UINT)
		VkEnumNameCase(VK_FORMAT_BC1_RGB_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC1_RGB_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC1_RGBA_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC1_RGBA_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC2_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC2_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC3_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC3_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC4_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC4_SNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC5_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC5_SNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC6H_UFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC6H_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC7_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_BC7_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_EAC_R11_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_EAC_R11_SNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_EAC_R11G11_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_EAC_R11G11_SNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_4x4_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_4x4_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x4_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x4_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x5_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x5_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x5_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x5_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x6_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x6_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x5_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x5_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x6_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x6_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x8_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x8_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x5_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x5_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x6_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x6_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x8_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x8_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x10_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x10_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x10_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x10_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x12_UNORM_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x12_SRGB_BLOCK)
		VkEnumNameCase(VK_FORMAT_G8B8G8R8_422_UNORM)
		VkEnumNameCase(VK_FORMAT_B8G8R8G8_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8R8_2PLANE_420_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8R8_2PLANE_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM)
		VkEnumNameCase(VK_FORMAT_R10X6_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_R10X6G10X6_UNORM_2PACK16)
		VkEnumNameCase(VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_R12X4_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_R12X4G12X4_UNORM_2PACK16)
		VkEnumNameCase(VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G16B16G16R16_422_UNORM)
		VkEnumNameCase(VK_FORMAT_B16G16R16G16_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM)
		VkEnumNameCase(VK_FORMAT_G16_B16R16_2PLANE_420_UNORM)
		VkEnumNameCase(VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G16_B16R16_2PLANE_422_UNORM)
		VkEnumNameCase(VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM)
		VkEnumNameCase(VK_FORMAT_G8_B8R8_2PLANE_444_UNORM)
		VkEnumNameCase(VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16)
		VkEnumNameCase(VK_FORMAT_G16_B16R16_2PLANE_444_UNORM)
		VkEnumNameCase(VK_FORMAT_A4R4G4B4_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_A4B4G4R4_UNORM_PACK16)
		VkEnumNameCase(VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK)
		VkEnumNameCase(VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG)
		VkEnumNameCase(VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFormatFeatureFlagBitsString( VkFormatFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_BLIT_SRC_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_BLIT_DST_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_TRANSFER_SRC_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_TRANSFER_DST_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_DISJOINT_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
		VkEnumNameCase(VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)
		VkEnumNameCase(VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT)
		VkEnumNameCase(VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageCreateFlagBitsString( VkImageCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_CREATE_SPARSE_BINDING_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_SPARSE_ALIASED_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_ALIAS_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_EXTENDED_USAGE_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_PROTECTED_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_DISJOINT_BIT)
		VkEnumNameCase(VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV)
		VkEnumNameCase(VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageTilingString( VkImageTiling value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_TILING_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_TILING_LINEAR)
		VkEnumNameCase(VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageTypeString( VkImageType value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_TYPE_1D)
		VkEnumNameCase(VK_IMAGE_TYPE_2D)
		VkEnumNameCase(VK_IMAGE_TYPE_3D)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageUsageFlagBitsString( VkImageUsageFlagBits value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_USAGE_TRANSFER_SRC_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_TRANSFER_DST_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_SAMPLED_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_STORAGE_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT)
		VkEnumNameCase(VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkInstanceCreateFlagBitsString( VkInstanceCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkInternalAllocationTypeString( VkInternalAllocationType value){
	switch(value){
		VkEnumNameCase(VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkMemoryHeapFlagBitsString( VkMemoryHeapFlagBits value){
	switch(value){
		VkEnumNameCase(VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
		VkEnumNameCase(VK_MEMORY_HEAP_MULTI_INSTANCE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkMemoryPropertyFlagBitsString( VkMemoryPropertyFlagBits value){
	switch(value){
		VkEnumNameCase(VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_PROTECTED_BIT)
		VkEnumNameCase(VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD)
		VkEnumNameCase(VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD)
		VkEnumNameCase(VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPhysicalDeviceTypeString( VkPhysicalDeviceType value){
	switch(value){
		VkEnumNameCase(VK_PHYSICAL_DEVICE_TYPE_OTHER)
		VkEnumNameCase(VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU)
		VkEnumNameCase(VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU)
		VkEnumNameCase(VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU)
		VkEnumNameCase(VK_PHYSICAL_DEVICE_TYPE_CPU)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkQueueFlagBitsString( VkQueueFlagBits value){
	switch(value){
		VkEnumNameCase(VK_QUEUE_GRAPHICS_BIT)
		VkEnumNameCase(VK_QUEUE_COMPUTE_BIT)
		VkEnumNameCase(VK_QUEUE_TRANSFER_BIT)
		VkEnumNameCase(VK_QUEUE_SPARSE_BINDING_BIT)
		VkEnumNameCase(VK_QUEUE_PROTECTED_BIT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_QUEUE_VIDEO_DECODE_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_QUEUE_VIDEO_ENCODE_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSampleCountFlagBitsString( VkSampleCountFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SAMPLE_COUNT_1_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_2_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_4_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_8_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_16_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_32_BIT)
		VkEnumNameCase(VK_SAMPLE_COUNT_64_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSystemAllocationScopeString( VkSystemAllocationScope value){
	switch(value){
		VkEnumNameCase(VK_SYSTEM_ALLOCATION_SCOPE_COMMAND)
		VkEnumNameCase(VK_SYSTEM_ALLOCATION_SCOPE_OBJECT)
		VkEnumNameCase(VK_SYSTEM_ALLOCATION_SCOPE_CACHE)
		VkEnumNameCase(VK_SYSTEM_ALLOCATION_SCOPE_DEVICE)
		VkEnumNameCase(VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPipelineStageFlagBitsString( VkPipelineStageFlagBits value){
	switch(value){
		VkEnumNameCase(VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_VERTEX_INPUT_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_VERTEX_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_TRANSFER_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_HOST_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT)
		VkEnumNameCase(VK_PIPELINE_STAGE_NONE)
		VkEnumNameCase(VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV)
		VkEnumNameCase(VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV)
		VkEnumNameCase(VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageAspectFlagBitsString( VkImageAspectFlagBits value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_ASPECT_COLOR_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_DEPTH_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_STENCIL_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_METADATA_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_PLANE_0_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_PLANE_1_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_PLANE_2_BIT)
		VkEnumNameCase(VK_IMAGE_ASPECT_NONE)
		VkEnumNameCase(VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSparseImageFormatFlagBitsString( VkSparseImageFormatFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT)
		VkEnumNameCase(VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT)
		VkEnumNameCase(VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSparseMemoryBindFlagBitsString( VkSparseMemoryBindFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SPARSE_MEMORY_BIND_METADATA_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFenceCreateFlagBitsString( VkFenceCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_FENCE_CREATE_SIGNALED_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkEventCreateFlagBitsString( VkEventCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EVENT_CREATE_DEVICE_ONLY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkQueryPipelineStatisticFlagBitsString( VkQueryPipelineStatisticFlagBits value){
	switch(value){
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT)
		VkEnumNameCase(VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkQueryResultFlagBitsString( VkQueryResultFlagBits value){
	switch(value){
		VkEnumNameCase(VK_QUERY_RESULT_64_BIT)
		VkEnumNameCase(VK_QUERY_RESULT_WAIT_BIT)
		VkEnumNameCase(VK_QUERY_RESULT_WITH_AVAILABILITY_BIT)
		VkEnumNameCase(VK_QUERY_RESULT_PARTIAL_BIT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_QUERY_RESULT_WITH_STATUS_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkQueryTypeString( VkQueryType value){
	switch(value){
		VkEnumNameCase(VK_QUERY_TYPE_OCCLUSION)
		VkEnumNameCase(VK_QUERY_TYPE_PIPELINE_STATISTICS)
		VkEnumNameCase(VK_QUERY_TYPE_TIMESTAMP)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT)
		VkEnumNameCase(VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR)
		VkEnumNameCase(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR)
		VkEnumNameCase(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR)
		VkEnumNameCase(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV)
		VkEnumNameCase(VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_QUERY_TYPE_VIDEO_ENCODE_BITSTREAM_BUFFER_RANGE_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT)
		VkEnumNameCase(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR)
		VkEnumNameCase(VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkBufferCreateFlagBitsString( VkBufferCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_BUFFER_CREATE_SPARSE_BINDING_BIT)
		VkEnumNameCase(VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT)
		VkEnumNameCase(VK_BUFFER_CREATE_SPARSE_ALIASED_BIT)
		VkEnumNameCase(VK_BUFFER_CREATE_PROTECTED_BIT)
		VkEnumNameCase(VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkBufferUsageFlagBitsString( VkBufferUsageFlagBits value){
	switch(value){
		VkEnumNameCase(VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_TRANSFER_DST_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_INDEX_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_VERTEX_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT)
		VkEnumNameCase(VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT)
		VkEnumNameCase(VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT)
		VkEnumNameCase(VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT)
		VkEnumNameCase(VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR)
		VkEnumNameCase(VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR)
		VkEnumNameCase(VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSharingModeString( VkSharingMode value){
	switch(value){
		VkEnumNameCase(VK_SHARING_MODE_EXCLUSIVE)
		VkEnumNameCase(VK_SHARING_MODE_CONCURRENT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageLayoutString( VkImageLayout value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_LAYOUT_UNDEFINED)
		VkEnumNameCase(VK_IMAGE_LAYOUT_GENERAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_PREINITIALIZED)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL)
		VkEnumNameCase(VK_IMAGE_LAYOUT_PRESENT_SRC_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		VkEnumNameCase(VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR)
		VkEnumNameCase(VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT)
		VkEnumNameCase(VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR)
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
#ifdef VK_ENABLE_BETA_EXTENSIONS

		VkEnumNameCase(VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR)
#endif // VK_ENABLE_BETA_EXTENSIONS
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkComponentSwizzleString( VkComponentSwizzle value){
	switch(value){
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_IDENTITY)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_ZERO)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_ONE)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_R)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_G)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_B)
		VkEnumNameCase(VK_COMPONENT_SWIZZLE_A)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageViewCreateFlagBitsString( VkImageViewCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT)
		VkEnumNameCase(VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkImageViewTypeString( VkImageViewType value){
	switch(value){
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_1D)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_2D)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_3D)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_CUBE)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_1D_ARRAY)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_2D_ARRAY)
		VkEnumNameCase(VK_IMAGE_VIEW_TYPE_CUBE_ARRAY)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkBlendFactorString( VkBlendFactor value){
	switch(value){
		VkEnumNameCase(VK_BLEND_FACTOR_ZERO)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE)
		VkEnumNameCase(VK_BLEND_FACTOR_SRC_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_DST_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_SRC_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_DST_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_CONSTANT_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_CONSTANT_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_SRC_ALPHA_SATURATE)
		VkEnumNameCase(VK_BLEND_FACTOR_SRC1_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR)
		VkEnumNameCase(VK_BLEND_FACTOR_SRC1_ALPHA)
		VkEnumNameCase(VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkBlendOpString( VkBlendOp value){
	switch(value){
		VkEnumNameCase(VK_BLEND_OP_ADD)
		VkEnumNameCase(VK_BLEND_OP_SUBTRACT)
		VkEnumNameCase(VK_BLEND_OP_REVERSE_SUBTRACT)
		VkEnumNameCase(VK_BLEND_OP_MIN)
		VkEnumNameCase(VK_BLEND_OP_MAX)
		VkEnumNameCase(VK_BLEND_OP_ZERO_EXT)
		VkEnumNameCase(VK_BLEND_OP_SRC_EXT)
		VkEnumNameCase(VK_BLEND_OP_DST_EXT)
		VkEnumNameCase(VK_BLEND_OP_SRC_OVER_EXT)
		VkEnumNameCase(VK_BLEND_OP_DST_OVER_EXT)
		VkEnumNameCase(VK_BLEND_OP_SRC_IN_EXT)
		VkEnumNameCase(VK_BLEND_OP_DST_IN_EXT)
		VkEnumNameCase(VK_BLEND_OP_SRC_OUT_EXT)
		VkEnumNameCase(VK_BLEND_OP_DST_OUT_EXT)
		VkEnumNameCase(VK_BLEND_OP_SRC_ATOP_EXT)
		VkEnumNameCase(VK_BLEND_OP_DST_ATOP_EXT)
		VkEnumNameCase(VK_BLEND_OP_XOR_EXT)
		VkEnumNameCase(VK_BLEND_OP_MULTIPLY_EXT)
		VkEnumNameCase(VK_BLEND_OP_SCREEN_EXT)
		VkEnumNameCase(VK_BLEND_OP_OVERLAY_EXT)
		VkEnumNameCase(VK_BLEND_OP_DARKEN_EXT)
		VkEnumNameCase(VK_BLEND_OP_LIGHTEN_EXT)
		VkEnumNameCase(VK_BLEND_OP_COLORDODGE_EXT)
		VkEnumNameCase(VK_BLEND_OP_COLORBURN_EXT)
		VkEnumNameCase(VK_BLEND_OP_HARDLIGHT_EXT)
		VkEnumNameCase(VK_BLEND_OP_SOFTLIGHT_EXT)
		VkEnumNameCase(VK_BLEND_OP_DIFFERENCE_EXT)
		VkEnumNameCase(VK_BLEND_OP_EXCLUSION_EXT)
		VkEnumNameCase(VK_BLEND_OP_INVERT_EXT)
		VkEnumNameCase(VK_BLEND_OP_INVERT_RGB_EXT)
		VkEnumNameCase(VK_BLEND_OP_LINEARDODGE_EXT)
		VkEnumNameCase(VK_BLEND_OP_LINEARBURN_EXT)
		VkEnumNameCase(VK_BLEND_OP_VIVIDLIGHT_EXT)
		VkEnumNameCase(VK_BLEND_OP_LINEARLIGHT_EXT)
		VkEnumNameCase(VK_BLEND_OP_PINLIGHT_EXT)
		VkEnumNameCase(VK_BLEND_OP_HARDMIX_EXT)
		VkEnumNameCase(VK_BLEND_OP_HSL_HUE_EXT)
		VkEnumNameCase(VK_BLEND_OP_HSL_SATURATION_EXT)
		VkEnumNameCase(VK_BLEND_OP_HSL_COLOR_EXT)
		VkEnumNameCase(VK_BLEND_OP_HSL_LUMINOSITY_EXT)
		VkEnumNameCase(VK_BLEND_OP_PLUS_EXT)
		VkEnumNameCase(VK_BLEND_OP_PLUS_CLAMPED_EXT)
		VkEnumNameCase(VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT)
		VkEnumNameCase(VK_BLEND_OP_PLUS_DARKER_EXT)
		VkEnumNameCase(VK_BLEND_OP_MINUS_EXT)
		VkEnumNameCase(VK_BLEND_OP_MINUS_CLAMPED_EXT)
		VkEnumNameCase(VK_BLEND_OP_CONTRAST_EXT)
		VkEnumNameCase(VK_BLEND_OP_INVERT_OVG_EXT)
		VkEnumNameCase(VK_BLEND_OP_RED_EXT)
		VkEnumNameCase(VK_BLEND_OP_GREEN_EXT)
		VkEnumNameCase(VK_BLEND_OP_BLUE_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkColorComponentFlagBitsString( VkColorComponentFlagBits value){
	switch(value){
		VkEnumNameCase(VK_COLOR_COMPONENT_R_BIT)
		VkEnumNameCase(VK_COLOR_COMPONENT_G_BIT)
		VkEnumNameCase(VK_COLOR_COMPONENT_B_BIT)
		VkEnumNameCase(VK_COLOR_COMPONENT_A_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCompareOpString( VkCompareOp value){
	switch(value){
		VkEnumNameCase(VK_COMPARE_OP_NEVER)
		VkEnumNameCase(VK_COMPARE_OP_LESS)
		VkEnumNameCase(VK_COMPARE_OP_EQUAL)
		VkEnumNameCase(VK_COMPARE_OP_LESS_OR_EQUAL)
		VkEnumNameCase(VK_COMPARE_OP_GREATER)
		VkEnumNameCase(VK_COMPARE_OP_NOT_EQUAL)
		VkEnumNameCase(VK_COMPARE_OP_GREATER_OR_EQUAL)
		VkEnumNameCase(VK_COMPARE_OP_ALWAYS)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCullModeFlagBitsString( VkCullModeFlagBits value){
	switch(value){
		VkEnumNameCase(VK_CULL_MODE_NONE)
		VkEnumNameCase(VK_CULL_MODE_FRONT_BIT)
		VkEnumNameCase(VK_CULL_MODE_BACK_BIT)
		VkEnumNameCase(VK_CULL_MODE_FRONT_AND_BACK)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDynamicStateString( VkDynamicState value){
	switch(value){
		VkEnumNameCase(VK_DYNAMIC_STATE_VIEWPORT)
		VkEnumNameCase(VK_DYNAMIC_STATE_SCISSOR)
		VkEnumNameCase(VK_DYNAMIC_STATE_LINE_WIDTH)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_BIAS)
		VkEnumNameCase(VK_DYNAMIC_STATE_BLEND_CONSTANTS)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_BOUNDS)
		VkEnumNameCase(VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK)
		VkEnumNameCase(VK_DYNAMIC_STATE_STENCIL_WRITE_MASK)
		VkEnumNameCase(VK_DYNAMIC_STATE_STENCIL_REFERENCE)
		VkEnumNameCase(VK_DYNAMIC_STATE_CULL_MODE)
		VkEnumNameCase(VK_DYNAMIC_STATE_FRONT_FACE)
		VkEnumNameCase(VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY)
		VkEnumNameCase(VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT)
		VkEnumNameCase(VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT)
		VkEnumNameCase(VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_COMPARE_OP)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_STENCIL_OP)
		VkEnumNameCase(VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE)
		VkEnumNameCase(VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV)
		VkEnumNameCase(VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR)
		VkEnumNameCase(VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV)
		VkEnumNameCase(VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV)
		VkEnumNameCase(VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV)
		VkEnumNameCase(VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR)
		VkEnumNameCase(VK_DYNAMIC_STATE_LINE_STIPPLE_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_VERTEX_INPUT_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_LOGIC_OP_EXT)
		VkEnumNameCase(VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFrontFaceString( VkFrontFace value){
	switch(value){
		VkEnumNameCase(VK_FRONT_FACE_COUNTER_CLOCKWISE)
		VkEnumNameCase(VK_FRONT_FACE_CLOCKWISE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkLogicOpString( VkLogicOp value){
	switch(value){
		VkEnumNameCase(VK_LOGIC_OP_CLEAR)
		VkEnumNameCase(VK_LOGIC_OP_AND)
		VkEnumNameCase(VK_LOGIC_OP_AND_REVERSE)
		VkEnumNameCase(VK_LOGIC_OP_COPY)
		VkEnumNameCase(VK_LOGIC_OP_AND_INVERTED)
		VkEnumNameCase(VK_LOGIC_OP_NO_OP)
		VkEnumNameCase(VK_LOGIC_OP_XOR)
		VkEnumNameCase(VK_LOGIC_OP_OR)
		VkEnumNameCase(VK_LOGIC_OP_NOR)
		VkEnumNameCase(VK_LOGIC_OP_EQUIVALENT)
		VkEnumNameCase(VK_LOGIC_OP_INVERT)
		VkEnumNameCase(VK_LOGIC_OP_OR_REVERSE)
		VkEnumNameCase(VK_LOGIC_OP_COPY_INVERTED)
		VkEnumNameCase(VK_LOGIC_OP_OR_INVERTED)
		VkEnumNameCase(VK_LOGIC_OP_NAND)
		VkEnumNameCase(VK_LOGIC_OP_SET)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPipelineCreateFlagBitsString( VkPipelineCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_DERIVATIVE_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_DISPATCH_BASE_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT)
		VkEnumNameCase(VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV)
		VkEnumNameCase(VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV)
		VkEnumNameCase(VK_PIPELINE_CREATE_LIBRARY_BIT_KHR)
		VkEnumNameCase(VK_PIPELINE_CREATE_RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_CREATE_LINK_TIME_OPTIMIZATION_BIT_EXT)
		VkEnumNameCase(VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPipelineShaderStageCreateFlagBitsString( VkPipelineShaderStageCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT)
		VkEnumNameCase(VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPolygonModeString( VkPolygonMode value){
	switch(value){
		VkEnumNameCase(VK_POLYGON_MODE_FILL)
		VkEnumNameCase(VK_POLYGON_MODE_LINE)
		VkEnumNameCase(VK_POLYGON_MODE_POINT)
		VkEnumNameCase(VK_POLYGON_MODE_FILL_RECTANGLE_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPrimitiveTopologyString( VkPrimitiveTopology value){
	switch(value){
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_POINT_LIST)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_LINE_LIST)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY)
		VkEnumNameCase(VK_PRIMITIVE_TOPOLOGY_PATCH_LIST)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkShaderStageFlagBitsString( VkShaderStageFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SHADER_STAGE_VERTEX_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_GEOMETRY_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_FRAGMENT_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_COMPUTE_BIT)
		VkEnumNameCase(VK_SHADER_STAGE_ALL_GRAPHICS)
		VkEnumNameCase(VK_SHADER_STAGE_ALL)
		VkEnumNameCase(VK_SHADER_STAGE_RAYGEN_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_ANY_HIT_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_MISS_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_INTERSECTION_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_CALLABLE_BIT_KHR)
		VkEnumNameCase(VK_SHADER_STAGE_TASK_BIT_NV)
		VkEnumNameCase(VK_SHADER_STAGE_MESH_BIT_NV)
		VkEnumNameCase(VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkStencilOpString( VkStencilOp value){
	switch(value){
		VkEnumNameCase(VK_STENCIL_OP_KEEP)
		VkEnumNameCase(VK_STENCIL_OP_ZERO)
		VkEnumNameCase(VK_STENCIL_OP_REPLACE)
		VkEnumNameCase(VK_STENCIL_OP_INCREMENT_AND_CLAMP)
		VkEnumNameCase(VK_STENCIL_OP_DECREMENT_AND_CLAMP)
		VkEnumNameCase(VK_STENCIL_OP_INVERT)
		VkEnumNameCase(VK_STENCIL_OP_INCREMENT_AND_WRAP)
		VkEnumNameCase(VK_STENCIL_OP_DECREMENT_AND_WRAP)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkVertexInputRateString( VkVertexInputRate value){
	switch(value){
		VkEnumNameCase(VK_VERTEX_INPUT_RATE_VERTEX)
		VkEnumNameCase(VK_VERTEX_INPUT_RATE_INSTANCE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkBorderColorString( VkBorderColor value){
	switch(value){
		VkEnumNameCase(VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK)
		VkEnumNameCase(VK_BORDER_COLOR_INT_TRANSPARENT_BLACK)
		VkEnumNameCase(VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK)
		VkEnumNameCase(VK_BORDER_COLOR_INT_OPAQUE_BLACK)
		VkEnumNameCase(VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE)
		VkEnumNameCase(VK_BORDER_COLOR_INT_OPAQUE_WHITE)
		VkEnumNameCase(VK_BORDER_COLOR_FLOAT_CUSTOM_EXT)
		VkEnumNameCase(VK_BORDER_COLOR_INT_CUSTOM_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFilterString( VkFilter value){
	switch(value){
		VkEnumNameCase(VK_FILTER_NEAREST)
		VkEnumNameCase(VK_FILTER_LINEAR)
		VkEnumNameCase(VK_FILTER_CUBIC_IMG)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerAddressModeString( VkSamplerAddressMode value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_ADDRESS_MODE_REPEAT)
		VkEnumNameCase(VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT)
		VkEnumNameCase(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE)
		VkEnumNameCase(VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER)
		VkEnumNameCase(VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerCreateFlagBitsString( VkSamplerCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT)
		VkEnumNameCase(VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT)
		VkEnumNameCase(VK_SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerMipmapModeString( VkSamplerMipmapMode value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_MIPMAP_MODE_NEAREST)
		VkEnumNameCase(VK_SAMPLER_MIPMAP_MODE_LINEAR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDescriptorPoolCreateFlagBitsString( VkDescriptorPoolCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDescriptorSetLayoutCreateFlagBitsString( VkDescriptorSetLayoutCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR)
		VkEnumNameCase(VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDescriptorTypeString( VkDescriptorType value){
	switch(value){
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_SAMPLER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_STORAGE_IMAGE)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV)
		VkEnumNameCase(VK_DESCRIPTOR_TYPE_MUTABLE_VALVE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkAccessFlagBitsString( VkAccessFlagBits value){
	switch(value){
		VkEnumNameCase(VK_ACCESS_INDIRECT_COMMAND_READ_BIT)
		VkEnumNameCase(VK_ACCESS_INDEX_READ_BIT)
		VkEnumNameCase(VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT)
		VkEnumNameCase(VK_ACCESS_UNIFORM_READ_BIT)
		VkEnumNameCase(VK_ACCESS_INPUT_ATTACHMENT_READ_BIT)
		VkEnumNameCase(VK_ACCESS_SHADER_READ_BIT)
		VkEnumNameCase(VK_ACCESS_SHADER_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_COLOR_ATTACHMENT_READ_BIT)
		VkEnumNameCase(VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT)
		VkEnumNameCase(VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_TRANSFER_READ_BIT)
		VkEnumNameCase(VK_ACCESS_TRANSFER_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_HOST_READ_BIT)
		VkEnumNameCase(VK_ACCESS_HOST_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_MEMORY_READ_BIT)
		VkEnumNameCase(VK_ACCESS_MEMORY_WRITE_BIT)
		VkEnumNameCase(VK_ACCESS_NONE)
		VkEnumNameCase(VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR)
		VkEnumNameCase(VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR)
		VkEnumNameCase(VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT)
		VkEnumNameCase(VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR)
		VkEnumNameCase(VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV)
		VkEnumNameCase(VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkAttachmentDescriptionFlagBitsString( VkAttachmentDescriptionFlagBits value){
	switch(value){
		VkEnumNameCase(VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkAttachmentLoadOpString( VkAttachmentLoadOp value){
	switch(value){
		VkEnumNameCase(VK_ATTACHMENT_LOAD_OP_LOAD)
		VkEnumNameCase(VK_ATTACHMENT_LOAD_OP_CLEAR)
		VkEnumNameCase(VK_ATTACHMENT_LOAD_OP_DONT_CARE)
		VkEnumNameCase(VK_ATTACHMENT_LOAD_OP_NONE_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkAttachmentStoreOpString( VkAttachmentStoreOp value){
	switch(value){
		VkEnumNameCase(VK_ATTACHMENT_STORE_OP_STORE)
		VkEnumNameCase(VK_ATTACHMENT_STORE_OP_DONT_CARE)
		VkEnumNameCase(VK_ATTACHMENT_STORE_OP_NONE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDependencyFlagBitsString( VkDependencyFlagBits value){
	switch(value){
		VkEnumNameCase(VK_DEPENDENCY_BY_REGION_BIT)
		VkEnumNameCase(VK_DEPENDENCY_DEVICE_GROUP_BIT)
		VkEnumNameCase(VK_DEPENDENCY_VIEW_LOCAL_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFramebufferCreateFlagBitsString( VkFramebufferCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPipelineBindPointString( VkPipelineBindPoint value){
	switch(value){
		VkEnumNameCase(VK_PIPELINE_BIND_POINT_GRAPHICS)
		VkEnumNameCase(VK_PIPELINE_BIND_POINT_COMPUTE)
		VkEnumNameCase(VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR)
		VkEnumNameCase(VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkRenderPassCreateFlagBitsString( VkRenderPassCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSubpassDescriptionFlagBitsString( VkSubpassDescriptionFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM)
		VkEnumNameCase(VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCommandPoolCreateFlagBitsString( VkCommandPoolCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_COMMAND_POOL_CREATE_TRANSIENT_BIT)
		VkEnumNameCase(VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT)
		VkEnumNameCase(VK_COMMAND_POOL_CREATE_PROTECTED_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCommandPoolResetFlagBitsString( VkCommandPoolResetFlagBits value){
	switch(value){
		VkEnumNameCase(VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCommandBufferLevelString( VkCommandBufferLevel value){
	switch(value){
		VkEnumNameCase(VK_COMMAND_BUFFER_LEVEL_PRIMARY)
		VkEnumNameCase(VK_COMMAND_BUFFER_LEVEL_SECONDARY)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCommandBufferResetFlagBitsString( VkCommandBufferResetFlagBits value){
	switch(value){
		VkEnumNameCase(VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCommandBufferUsageFlagBitsString( VkCommandBufferUsageFlagBits value){
	switch(value){
		VkEnumNameCase(VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
		VkEnumNameCase(VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT)
		VkEnumNameCase(VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkQueryControlFlagBitsString( VkQueryControlFlagBits value){
	switch(value){
		VkEnumNameCase(VK_QUERY_CONTROL_PRECISE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkIndexTypeString( VkIndexType value){
	switch(value){
		VkEnumNameCase(VK_INDEX_TYPE_UINT16)
		VkEnumNameCase(VK_INDEX_TYPE_UINT32)
		VkEnumNameCase(VK_INDEX_TYPE_NONE_KHR)
		VkEnumNameCase(VK_INDEX_TYPE_UINT8_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkStencilFaceFlagBitsString( VkStencilFaceFlagBits value){
	switch(value){
		VkEnumNameCase(VK_STENCIL_FACE_FRONT_BIT)
		VkEnumNameCase(VK_STENCIL_FACE_BACK_BIT)
		VkEnumNameCase(VK_STENCIL_FACE_FRONT_AND_BACK)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSubpassContentsString( VkSubpassContents value){
	switch(value){
		VkEnumNameCase(VK_SUBPASS_CONTENTS_INLINE)
		VkEnumNameCase(VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSubgroupFeatureFlagBitsString( VkSubgroupFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SUBGROUP_FEATURE_BASIC_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_VOTE_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_ARITHMETIC_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_BALLOT_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_SHUFFLE_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_CLUSTERED_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_QUAD_BIT)
		VkEnumNameCase(VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPeerMemoryFeatureFlagBitsString( VkPeerMemoryFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT)
		VkEnumNameCase(VK_PEER_MEMORY_FEATURE_COPY_DST_BIT)
		VkEnumNameCase(VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT)
		VkEnumNameCase(VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkMemoryAllocateFlagBitsString( VkMemoryAllocateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT)
		VkEnumNameCase(VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT)
		VkEnumNameCase(VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPointClippingBehaviorString( VkPointClippingBehavior value){
	switch(value){
		VkEnumNameCase(VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES)
		VkEnumNameCase(VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkTessellationDomainOriginString( VkTessellationDomainOrigin value){
	switch(value){
		VkEnumNameCase(VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT)
		VkEnumNameCase(VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDeviceQueueCreateFlagBitsString( VkDeviceQueueCreateFlagBits value){
	switch(value){
		VkEnumNameCase(VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerYcbcrModelConversionString( VkSamplerYcbcrModelConversion value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY)
		VkEnumNameCase(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY)
		VkEnumNameCase(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709)
		VkEnumNameCase(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601)
		VkEnumNameCase(VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerYcbcrRangeString( VkSamplerYcbcrRange value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_YCBCR_RANGE_ITU_FULL)
		VkEnumNameCase(VK_SAMPLER_YCBCR_RANGE_ITU_NARROW)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkChromaLocationString( VkChromaLocation value){
	switch(value){
		VkEnumNameCase(VK_CHROMA_LOCATION_COSITED_EVEN)
		VkEnumNameCase(VK_CHROMA_LOCATION_MIDPOINT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDescriptorUpdateTemplateTypeString( VkDescriptorUpdateTemplateType value){
	switch(value){
		VkEnumNameCase(VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET)
		VkEnumNameCase(VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalMemoryHandleTypeFlagBitsString( VkExternalMemoryHandleTypeFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT)
#ifdef VK_USE_PLATFORM_ANDROID_KHR

		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID)
#endif // VK_USE_PLATFORM_ANDROID_KHR
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
		VkEnumNameCase(VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalMemoryFeatureFlagBitsString( VkExternalMemoryFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT)
		VkEnumNameCase(VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalFenceHandleTypeFlagBitsString( VkExternalFenceHandleTypeFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT)
		VkEnumNameCase(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT)
		VkEnumNameCase(VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT)
		VkEnumNameCase(VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalFenceFeatureFlagBitsString( VkExternalFenceFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT)
		VkEnumNameCase(VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFenceImportFlagBitsString( VkFenceImportFlagBits value){
	switch(value){
		VkEnumNameCase(VK_FENCE_IMPORT_TEMPORARY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSemaphoreImportFlagBitsString( VkSemaphoreImportFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SEMAPHORE_IMPORT_TEMPORARY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalSemaphoreHandleTypeFlagBitsString( VkExternalSemaphoreHandleTypeFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT)
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT)
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT)
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT)
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA)
#endif // VK_USE_PLATFORM_FUCHSIA
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkExternalSemaphoreFeatureFlagBitsString( VkExternalSemaphoreFeatureFlagBits value){
	switch(value){
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT)
		VkEnumNameCase(VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDriverIdString( VkDriverId value){
	switch(value){
		VkEnumNameCase(VK_DRIVER_ID_AMD_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_AMD_OPEN_SOURCE)
		VkEnumNameCase(VK_DRIVER_ID_MESA_RADV)
		VkEnumNameCase(VK_DRIVER_ID_NVIDIA_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS)
		VkEnumNameCase(VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA)
		VkEnumNameCase(VK_DRIVER_ID_IMAGINATION_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_QUALCOMM_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_ARM_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_GOOGLE_SWIFTSHADER)
		VkEnumNameCase(VK_DRIVER_ID_GGP_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_BROADCOM_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_MESA_LLVMPIPE)
		VkEnumNameCase(VK_DRIVER_ID_MOLTENVK)
		VkEnumNameCase(VK_DRIVER_ID_COREAVI_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_JUICE_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_VERISILICON_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_MESA_TURNIP)
		VkEnumNameCase(VK_DRIVER_ID_MESA_V3DV)
		VkEnumNameCase(VK_DRIVER_ID_MESA_PANVK)
		VkEnumNameCase(VK_DRIVER_ID_SAMSUNG_PROPRIETARY)
		VkEnumNameCase(VK_DRIVER_ID_MESA_VENUS)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkShaderFloatControlsIndependenceString( VkShaderFloatControlsIndependence value){
	switch(value){
		VkEnumNameCase(VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY)
		VkEnumNameCase(VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL)
		VkEnumNameCase(VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDescriptorBindingFlagBitsString( VkDescriptorBindingFlagBits value){
	switch(value){
		VkEnumNameCase(VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT)
		VkEnumNameCase(VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkResolveModeFlagBitsString( VkResolveModeFlagBits value){
	switch(value){
		VkEnumNameCase(VK_RESOLVE_MODE_NONE)
		VkEnumNameCase(VK_RESOLVE_MODE_SAMPLE_ZERO_BIT)
		VkEnumNameCase(VK_RESOLVE_MODE_AVERAGE_BIT)
		VkEnumNameCase(VK_RESOLVE_MODE_MIN_BIT)
		VkEnumNameCase(VK_RESOLVE_MODE_MAX_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSamplerReductionModeString( VkSamplerReductionMode value){
	switch(value){
		VkEnumNameCase(VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE)
		VkEnumNameCase(VK_SAMPLER_REDUCTION_MODE_MIN)
		VkEnumNameCase(VK_SAMPLER_REDUCTION_MODE_MAX)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSemaphoreTypeString( VkSemaphoreType value){
	switch(value){
		VkEnumNameCase(VK_SEMAPHORE_TYPE_BINARY)
		VkEnumNameCase(VK_SEMAPHORE_TYPE_TIMELINE)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSemaphoreWaitFlagBitsString( VkSemaphoreWaitFlagBits value){
	switch(value){
		VkEnumNameCase(VK_SEMAPHORE_WAIT_ANY_BIT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSurfaceTransformFlagBitsKHRString( VkSurfaceTransformFlagBitsKHR value){
	switch(value){
		VkEnumNameCase(VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR)
		VkEnumNameCase(VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkPresentModeKHRString( VkPresentModeKHR value){
	switch(value){
		VkEnumNameCase(VK_PRESENT_MODE_IMMEDIATE_KHR)
		VkEnumNameCase(VK_PRESENT_MODE_MAILBOX_KHR)
		VkEnumNameCase(VK_PRESENT_MODE_FIFO_KHR)
		VkEnumNameCase(VK_PRESENT_MODE_FIFO_RELAXED_KHR)
		VkEnumNameCase(VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR)
		VkEnumNameCase(VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkColorSpaceKHRString( VkColorSpaceKHR value){
	switch(value){
		VkEnumNameCase(VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
		VkEnumNameCase(VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_BT709_LINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_BT709_NONLINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_BT2020_LINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_HDR10_ST2084_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_DOLBYVISION_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_HDR10_HLG_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_PASS_THROUGH_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT)
		VkEnumNameCase(VK_COLOR_SPACE_DISPLAY_NATIVE_AMD)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkCompositeAlphaFlagBitsKHRString( VkCompositeAlphaFlagBitsKHR value){
	switch(value){
		VkEnumNameCase(VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
		VkEnumNameCase(VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR)
		VkEnumNameCase(VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR)
		VkEnumNameCase(VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkSwapchainCreateFlagBitsKHRString( VkSwapchainCreateFlagBitsKHR value){
	switch(value){
		VkEnumNameCase(VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR)
		VkEnumNameCase(VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR)
		VkEnumNameCase(VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDeviceGroupPresentModeFlagBitsKHRString( VkDeviceGroupPresentModeFlagBitsKHR value){
	switch(value){
		VkEnumNameCase(VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR)
		VkEnumNameCase(VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR)
		VkEnumNameCase(VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR)
		VkEnumNameCase(VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDisplayPlaneAlphaFlagBitsKHRString( VkDisplayPlaneAlphaFlagBitsKHR value){
	switch(value){
		VkEnumNameCase(VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR)
		VkEnumNameCase(VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR)
		VkEnumNameCase(VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR)
		VkEnumNameCase(VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDebugReportObjectTypeEXTString( VkDebugReportObjectTypeEXT value){
	switch(value){
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT)
#ifdef VK_USE_PLATFORM_FUCHSIA

		VkEnumNameCase(VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT)
#endif // VK_USE_PLATFORM_FUCHSIA
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkValidationCacheHeaderVersionEXTString( VkValidationCacheHeaderVersionEXT value){
	switch(value){
		VkEnumNameCase(VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkFragmentShadingRateCombinerOpKHRString( VkFragmentShadingRateCombinerOpKHR value){
	switch(value){
		VkEnumNameCase(VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR)
		VkEnumNameCase(VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR)
		VkEnumNameCase(VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR)
		VkEnumNameCase(VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR)
		VkEnumNameCase(VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkValidationFeatureEnableEXTString( VkValidationFeatureEnableEXT value){
	switch(value){
		VkEnumNameCase(VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkValidationFeatureDisableEXTString( VkValidationFeatureDisableEXT value){
	switch(value){
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_ALL_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT)
		VkEnumNameCase(VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkLineRasterizationModeEXTString( VkLineRasterizationModeEXT value){
	switch(value){
		VkEnumNameCase(VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT)
		VkEnumNameCase(VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT)
		VkEnumNameCase(VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT)
		VkEnumNameCase(VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
inline char const* GetVkDebugReportFlagBitsEXTString( VkDebugReportFlagBitsEXT value){
	switch(value){
		VkEnumNameCase(VK_DEBUG_REPORT_INFORMATION_BIT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_WARNING_BIT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_ERROR_BIT_EXT)
		VkEnumNameCase(VK_DEBUG_REPORT_DEBUG_BIT_EXT)
		default: (void)0;
		}
	return "[Unkown]";
}
#undef VkEnumNameCase
