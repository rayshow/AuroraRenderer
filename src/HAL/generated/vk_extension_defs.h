/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2020-2021 Baldur Karlsson
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* The MIT License (MIT)
*
* Copyright (c) 2022-2023 xiongya
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
******************************************************************************/

/******************************************************************************
* Generated from Khronos's vk.xml:

* Copyright 2015-2022 The Khronos Group Inc.
* 
* SPDX-License-Identifier: Apache-2.0 OR MIT
* 
* This file, vk.xml, is the Vulkan API Registry. It is a critically important
* and normative part of the Vulkan Specification, including a canonical
* machine-readable definition of the API, parameter and member validation
* language incorporated into the Specification and reference pages, and other
* material which is registered by Khronos, such as tags used by extension and
* layer authors. The authoritative public version of vk.xml is maintained in
* the default branch (currently named main) of the Khronos Vulkan GitHub
* project. The authoritative private version is maintained in the default
* branch of the member gitlab server.
* 

******************************************************************************/
// This file is autogenerated with vk_xml_parser.py - any changes will be overwritten next time
// that script is run.
// $ ./vk_xml_parser.py

#pragma once

// this file is autogenerated, so don't worry about clang-format issues
// clang-format off

#include"vk_common.h"




#ifdef VK_KHR_surface
#ifndef VK_KHR_SURFACE_CUSTOM_SWITCH
#define VK_KHR_SURFACE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SURFACE VK_KHR_surface && VK_KHR_SURFACE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SURFACE 0
#endif


#ifdef VK_KHR_swapchain
#ifndef VK_KHR_SWAPCHAIN_CUSTOM_SWITCH
#define VK_KHR_SWAPCHAIN_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SWAPCHAIN VK_KHR_swapchain && VK_KHR_SWAPCHAIN_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SWAPCHAIN 0
#endif


#ifdef VK_KHR_display
#ifndef VK_KHR_DISPLAY_CUSTOM_SWITCH
#define VK_KHR_DISPLAY_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DISPLAY VK_KHR_display && VK_KHR_DISPLAY_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DISPLAY 0
#endif


#ifdef VK_KHR_android_surface
#ifndef VK_KHR_ANDROID_SURFACE_CUSTOM_SWITCH
#define VK_KHR_ANDROID_SURFACE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_ANDROID_SURFACE VK_KHR_android_surface && VK_KHR_ANDROID_SURFACE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_ANDROID_SURFACE 0
#endif


#ifdef VK_KHR_win32_surface
#ifndef VK_KHR_WIN32_SURFACE_CUSTOM_SWITCH
#define VK_KHR_WIN32_SURFACE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_WIN32_SURFACE VK_KHR_win32_surface && VK_KHR_WIN32_SURFACE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_WIN32_SURFACE 0
#endif


#ifdef VK_KHR_sampler_mirror_clamp_to_edge
#ifndef VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_CUSTOM_SWITCH
#define VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE VK_KHR_sampler_mirror_clamp_to_edge && VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE 0
#endif


#ifdef VK_IMG_filter_cubic
#ifndef VK_IMG_FILTER_CUBIC_CUSTOM_SWITCH
#define VK_IMG_FILTER_CUBIC_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_IMG_FILTER_CUBIC VK_IMG_filter_cubic && VK_IMG_FILTER_CUBIC_CUSTOM_SWITCH 
#else
#define ENABLE_VK_IMG_FILTER_CUBIC 0
#endif


#ifdef VK_EXT_debug_marker
#ifndef VK_EXT_DEBUG_MARKER_CUSTOM_SWITCH
#define VK_EXT_DEBUG_MARKER_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_DEBUG_MARKER VK_EXT_debug_marker && VK_EXT_DEBUG_MARKER_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_DEBUG_MARKER 0
#endif


#ifdef VK_EXT_transform_feedback
#ifndef VK_EXT_TRANSFORM_FEEDBACK_CUSTOM_SWITCH
#define VK_EXT_TRANSFORM_FEEDBACK_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_TRANSFORM_FEEDBACK VK_EXT_transform_feedback && VK_EXT_TRANSFORM_FEEDBACK_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_TRANSFORM_FEEDBACK 0
#endif


#ifdef VK_KHR_multiview
#ifndef VK_KHR_MULTIVIEW_CUSTOM_SWITCH
#define VK_KHR_MULTIVIEW_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_MULTIVIEW VK_KHR_multiview && VK_KHR_MULTIVIEW_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_MULTIVIEW 0
#endif


#ifdef VK_KHR_get_physical_device_properties2
#ifndef VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH
#define VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2 VK_KHR_get_physical_device_properties2 && VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2 0
#endif


#ifdef VK_KHR_device_group
#ifndef VK_KHR_DEVICE_GROUP_CUSTOM_SWITCH
#define VK_KHR_DEVICE_GROUP_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DEVICE_GROUP VK_KHR_device_group && VK_KHR_DEVICE_GROUP_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DEVICE_GROUP 0
#endif


#ifdef VK_KHR_shader_draw_parameters
#ifndef VK_KHR_SHADER_DRAW_PARAMETERS_CUSTOM_SWITCH
#define VK_KHR_SHADER_DRAW_PARAMETERS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SHADER_DRAW_PARAMETERS VK_KHR_shader_draw_parameters && VK_KHR_SHADER_DRAW_PARAMETERS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SHADER_DRAW_PARAMETERS 0
#endif


#ifdef VK_EXT_astc_decode_mode
#ifndef VK_EXT_ASTC_DECODE_MODE_CUSTOM_SWITCH
#define VK_EXT_ASTC_DECODE_MODE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_ASTC_DECODE_MODE VK_EXT_astc_decode_mode && VK_EXT_ASTC_DECODE_MODE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_ASTC_DECODE_MODE 0
#endif


#ifdef VK_KHR_maintenance1
#ifndef VK_KHR_MAINTENANCE1_CUSTOM_SWITCH
#define VK_KHR_MAINTENANCE1_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_MAINTENANCE1 VK_KHR_maintenance1 && VK_KHR_MAINTENANCE1_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_MAINTENANCE1 0
#endif


#ifdef VK_KHR_device_group_creation
#ifndef VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH
#define VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DEVICE_GROUP_CREATION VK_KHR_device_group_creation && VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DEVICE_GROUP_CREATION 0
#endif


#ifdef VK_KHR_external_memory_capabilities
#ifndef VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_MEMORY_CAPABILITIES VK_KHR_external_memory_capabilities && VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_MEMORY_CAPABILITIES 0
#endif


#ifdef VK_KHR_external_memory
#ifndef VK_KHR_EXTERNAL_MEMORY_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_MEMORY_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_MEMORY VK_KHR_external_memory && VK_KHR_EXTERNAL_MEMORY_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_MEMORY 0
#endif


#ifdef VK_KHR_external_memory_fd
#ifndef VK_KHR_EXTERNAL_MEMORY_FD_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_MEMORY_FD_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_MEMORY_FD VK_KHR_external_memory_fd && VK_KHR_EXTERNAL_MEMORY_FD_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_MEMORY_FD 0
#endif


#ifdef VK_KHR_external_semaphore_capabilities
#ifndef VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES VK_KHR_external_semaphore_capabilities && VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES 0
#endif


#ifdef VK_KHR_external_semaphore
#ifndef VK_KHR_EXTERNAL_SEMAPHORE_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_SEMAPHORE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE VK_KHR_external_semaphore && VK_KHR_EXTERNAL_SEMAPHORE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE 0
#endif


#ifdef VK_KHR_external_semaphore_fd
#ifndef VK_KHR_EXTERNAL_SEMAPHORE_FD_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_SEMAPHORE_FD_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE_FD VK_KHR_external_semaphore_fd && VK_KHR_EXTERNAL_SEMAPHORE_FD_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_SEMAPHORE_FD 0
#endif


#ifdef VK_KHR_push_descriptor
#ifndef VK_KHR_PUSH_DESCRIPTOR_CUSTOM_SWITCH
#define VK_KHR_PUSH_DESCRIPTOR_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_PUSH_DESCRIPTOR VK_KHR_push_descriptor && VK_KHR_PUSH_DESCRIPTOR_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_PUSH_DESCRIPTOR 0
#endif


#ifdef VK_KHR_shader_float16_int8
#ifndef VK_KHR_SHADER_FLOAT16_INT8_CUSTOM_SWITCH
#define VK_KHR_SHADER_FLOAT16_INT8_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SHADER_FLOAT16_INT8 VK_KHR_shader_float16_int8 && VK_KHR_SHADER_FLOAT16_INT8_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SHADER_FLOAT16_INT8 0
#endif


#ifdef VK_KHR_16bit_storage
#ifndef VK_KHR_16BIT_STORAGE_CUSTOM_SWITCH
#define VK_KHR_16BIT_STORAGE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_16BIT_STORAGE VK_KHR_16bit_storage && VK_KHR_16BIT_STORAGE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_16BIT_STORAGE 0
#endif


#ifdef VK_KHR_incremental_present
#ifndef VK_KHR_INCREMENTAL_PRESENT_CUSTOM_SWITCH
#define VK_KHR_INCREMENTAL_PRESENT_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_INCREMENTAL_PRESENT VK_KHR_incremental_present && VK_KHR_INCREMENTAL_PRESENT_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_INCREMENTAL_PRESENT 0
#endif


#ifdef VK_KHR_descriptor_update_template
#ifndef VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_CUSTOM_SWITCH
#define VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE VK_KHR_descriptor_update_template && VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE 0
#endif


#ifdef VK_GOOGLE_display_timing
#ifndef VK_GOOGLE_DISPLAY_TIMING_CUSTOM_SWITCH
#define VK_GOOGLE_DISPLAY_TIMING_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_GOOGLE_DISPLAY_TIMING VK_GOOGLE_display_timing && VK_GOOGLE_DISPLAY_TIMING_CUSTOM_SWITCH 
#else
#define ENABLE_VK_GOOGLE_DISPLAY_TIMING 0
#endif


#ifdef VK_EXT_swapchain_colorspace
#ifndef VK_EXT_SWAPCHAIN_COLORSPACE_CUSTOM_SWITCH
#define VK_EXT_SWAPCHAIN_COLORSPACE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_SWAPCHAIN_COLORSPACE VK_EXT_swapchain_colorspace && VK_EXT_SWAPCHAIN_COLORSPACE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_SWAPCHAIN_COLORSPACE 0
#endif


#ifdef VK_EXT_hdr_metadata
#ifndef VK_EXT_HDR_METADATA_CUSTOM_SWITCH
#define VK_EXT_HDR_METADATA_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_HDR_METADATA VK_EXT_hdr_metadata && VK_EXT_HDR_METADATA_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_HDR_METADATA 0
#endif


#ifdef VK_KHR_create_renderpass2
#ifndef VK_KHR_CREATE_RENDERPASS2_CUSTOM_SWITCH
#define VK_KHR_CREATE_RENDERPASS2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_CREATE_RENDERPASS2 VK_KHR_create_renderpass2 && VK_KHR_CREATE_RENDERPASS2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_CREATE_RENDERPASS2 0
#endif


#ifdef VK_KHR_shared_presentable_image
#ifndef VK_KHR_SHARED_PRESENTABLE_IMAGE_CUSTOM_SWITCH
#define VK_KHR_SHARED_PRESENTABLE_IMAGE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SHARED_PRESENTABLE_IMAGE VK_KHR_shared_presentable_image && VK_KHR_SHARED_PRESENTABLE_IMAGE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SHARED_PRESENTABLE_IMAGE 0
#endif


#ifdef VK_KHR_external_fence_capabilities
#ifndef VK_KHR_EXTERNAL_FENCE_CAPABILITIES_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_FENCE_CAPABILITIES_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_FENCE_CAPABILITIES VK_KHR_external_fence_capabilities && VK_KHR_EXTERNAL_FENCE_CAPABILITIES_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_FENCE_CAPABILITIES 0
#endif


#ifdef VK_KHR_external_fence
#ifndef VK_KHR_EXTERNAL_FENCE_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_FENCE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_FENCE VK_KHR_external_fence && VK_KHR_EXTERNAL_FENCE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_FENCE 0
#endif


#ifdef VK_KHR_external_fence_fd
#ifndef VK_KHR_EXTERNAL_FENCE_FD_CUSTOM_SWITCH
#define VK_KHR_EXTERNAL_FENCE_FD_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_EXTERNAL_FENCE_FD VK_KHR_external_fence_fd && VK_KHR_EXTERNAL_FENCE_FD_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_EXTERNAL_FENCE_FD 0
#endif


#ifdef VK_KHR_maintenance2
#ifndef VK_KHR_MAINTENANCE2_CUSTOM_SWITCH
#define VK_KHR_MAINTENANCE2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_MAINTENANCE2 VK_KHR_maintenance2 && VK_KHR_MAINTENANCE2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_MAINTENANCE2 0
#endif


#ifdef VK_KHR_get_surface_capabilities2
#ifndef VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH
#define VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_SURFACE_CAPABILITIES2 VK_KHR_get_surface_capabilities2 && VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_SURFACE_CAPABILITIES2 0
#endif


#ifdef VK_KHR_variable_pointers
#ifndef VK_KHR_VARIABLE_POINTERS_CUSTOM_SWITCH
#define VK_KHR_VARIABLE_POINTERS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_VARIABLE_POINTERS VK_KHR_variable_pointers && VK_KHR_VARIABLE_POINTERS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_VARIABLE_POINTERS 0
#endif


#ifdef VK_EXT_queue_family_foreign
#ifndef VK_EXT_QUEUE_FAMILY_FOREIGN_CUSTOM_SWITCH
#define VK_EXT_QUEUE_FAMILY_FOREIGN_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_QUEUE_FAMILY_FOREIGN VK_EXT_queue_family_foreign && VK_EXT_QUEUE_FAMILY_FOREIGN_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_QUEUE_FAMILY_FOREIGN 0
#endif


#ifdef VK_KHR_dedicated_allocation
#ifndef VK_KHR_DEDICATED_ALLOCATION_CUSTOM_SWITCH
#define VK_KHR_DEDICATED_ALLOCATION_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DEDICATED_ALLOCATION VK_KHR_dedicated_allocation && VK_KHR_DEDICATED_ALLOCATION_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DEDICATED_ALLOCATION 0
#endif


#ifdef VK_EXT_sampler_filter_minmax
#ifndef VK_EXT_SAMPLER_FILTER_MINMAX_CUSTOM_SWITCH
#define VK_EXT_SAMPLER_FILTER_MINMAX_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_SAMPLER_FILTER_MINMAX VK_EXT_sampler_filter_minmax && VK_EXT_SAMPLER_FILTER_MINMAX_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_SAMPLER_FILTER_MINMAX 0
#endif


#ifdef VK_KHR_storage_buffer_storage_class
#ifndef VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH
#define VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_STORAGE_BUFFER_STORAGE_CLASS VK_KHR_storage_buffer_storage_class && VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_STORAGE_BUFFER_STORAGE_CLASS 0
#endif


#ifdef VK_EXT_sample_locations
#ifndef VK_EXT_SAMPLE_LOCATIONS_CUSTOM_SWITCH
#define VK_EXT_SAMPLE_LOCATIONS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_SAMPLE_LOCATIONS VK_EXT_sample_locations && VK_EXT_SAMPLE_LOCATIONS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_SAMPLE_LOCATIONS 0
#endif


#ifdef VK_KHR_relaxed_block_layout
#ifndef VK_KHR_RELAXED_BLOCK_LAYOUT_CUSTOM_SWITCH
#define VK_KHR_RELAXED_BLOCK_LAYOUT_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_RELAXED_BLOCK_LAYOUT VK_KHR_relaxed_block_layout && VK_KHR_RELAXED_BLOCK_LAYOUT_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_RELAXED_BLOCK_LAYOUT 0
#endif


#ifdef VK_KHR_get_memory_requirements2
#ifndef VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH
#define VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_MEMORY_REQUIREMENTS2 VK_KHR_get_memory_requirements2 && VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_MEMORY_REQUIREMENTS2 0
#endif


#ifdef VK_KHR_image_format_list
#ifndef VK_KHR_IMAGE_FORMAT_LIST_CUSTOM_SWITCH
#define VK_KHR_IMAGE_FORMAT_LIST_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_IMAGE_FORMAT_LIST VK_KHR_image_format_list && VK_KHR_IMAGE_FORMAT_LIST_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_IMAGE_FORMAT_LIST 0
#endif


#ifdef VK_KHR_sampler_ycbcr_conversion
#ifndef VK_KHR_SAMPLER_YCBCR_CONVERSION_CUSTOM_SWITCH
#define VK_KHR_SAMPLER_YCBCR_CONVERSION_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SAMPLER_YCBCR_CONVERSION VK_KHR_sampler_ycbcr_conversion && VK_KHR_SAMPLER_YCBCR_CONVERSION_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SAMPLER_YCBCR_CONVERSION 0
#endif


#ifdef VK_KHR_bind_memory2
#ifndef VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH
#define VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_BIND_MEMORY2 VK_KHR_bind_memory2 && VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_BIND_MEMORY2 0
#endif


#ifdef VK_EXT_validation_cache
#ifndef VK_EXT_VALIDATION_CACHE_CUSTOM_SWITCH
#define VK_EXT_VALIDATION_CACHE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_VALIDATION_CACHE VK_EXT_validation_cache && VK_EXT_VALIDATION_CACHE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_VALIDATION_CACHE 0
#endif


#ifdef VK_KHR_maintenance3
#ifndef VK_KHR_MAINTENANCE3_CUSTOM_SWITCH
#define VK_KHR_MAINTENANCE3_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_MAINTENANCE3 VK_KHR_maintenance3 && VK_KHR_MAINTENANCE3_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_MAINTENANCE3 0
#endif


#ifdef VK_KHR_draw_indirect_count
#ifndef VK_KHR_DRAW_INDIRECT_COUNT_CUSTOM_SWITCH
#define VK_KHR_DRAW_INDIRECT_COUNT_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DRAW_INDIRECT_COUNT VK_KHR_draw_indirect_count && VK_KHR_DRAW_INDIRECT_COUNT_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DRAW_INDIRECT_COUNT 0
#endif


#ifdef VK_EXT_filter_cubic
#ifndef VK_EXT_FILTER_CUBIC_CUSTOM_SWITCH
#define VK_EXT_FILTER_CUBIC_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_FILTER_CUBIC VK_EXT_filter_cubic && VK_EXT_FILTER_CUBIC_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_FILTER_CUBIC 0
#endif


#ifdef VK_EXT_global_priority
#ifndef VK_EXT_GLOBAL_PRIORITY_CUSTOM_SWITCH
#define VK_EXT_GLOBAL_PRIORITY_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_GLOBAL_PRIORITY VK_EXT_global_priority && VK_EXT_GLOBAL_PRIORITY_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_GLOBAL_PRIORITY 0
#endif


#ifdef VK_EXT_pipeline_creation_feedback
#ifndef VK_EXT_PIPELINE_CREATION_FEEDBACK_CUSTOM_SWITCH
#define VK_EXT_PIPELINE_CREATION_FEEDBACK_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_PIPELINE_CREATION_FEEDBACK VK_EXT_pipeline_creation_feedback && VK_EXT_PIPELINE_CREATION_FEEDBACK_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_PIPELINE_CREATION_FEEDBACK 0
#endif


#ifdef VK_KHR_driver_properties
#ifndef VK_KHR_DRIVER_PROPERTIES_CUSTOM_SWITCH
#define VK_KHR_DRIVER_PROPERTIES_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DRIVER_PROPERTIES VK_KHR_driver_properties && VK_KHR_DRIVER_PROPERTIES_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DRIVER_PROPERTIES 0
#endif


#ifdef VK_KHR_shader_float_controls
#ifndef VK_KHR_SHADER_FLOAT_CONTROLS_CUSTOM_SWITCH
#define VK_KHR_SHADER_FLOAT_CONTROLS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_SHADER_FLOAT_CONTROLS VK_KHR_shader_float_controls && VK_KHR_SHADER_FLOAT_CONTROLS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_SHADER_FLOAT_CONTROLS 0
#endif


#ifdef VK_KHR_depth_stencil_resolve
#ifndef VK_KHR_DEPTH_STENCIL_RESOLVE_CUSTOM_SWITCH
#define VK_KHR_DEPTH_STENCIL_RESOLVE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DEPTH_STENCIL_RESOLVE VK_KHR_depth_stencil_resolve && VK_KHR_DEPTH_STENCIL_RESOLVE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DEPTH_STENCIL_RESOLVE 0
#endif


#ifdef VK_KHR_vulkan_memory_model
#ifndef VK_KHR_VULKAN_MEMORY_MODEL_CUSTOM_SWITCH
#define VK_KHR_VULKAN_MEMORY_MODEL_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_VULKAN_MEMORY_MODEL VK_KHR_vulkan_memory_model && VK_KHR_VULKAN_MEMORY_MODEL_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_VULKAN_MEMORY_MODEL 0
#endif


#ifdef VK_EXT_fragment_density_map
#ifndef VK_EXT_FRAGMENT_DENSITY_MAP_CUSTOM_SWITCH
#define VK_EXT_FRAGMENT_DENSITY_MAP_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_FRAGMENT_DENSITY_MAP VK_EXT_fragment_density_map && VK_EXT_FRAGMENT_DENSITY_MAP_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_FRAGMENT_DENSITY_MAP 0
#endif


#ifdef VK_EXT_scalar_block_layout
#ifndef VK_EXT_SCALAR_BLOCK_LAYOUT_CUSTOM_SWITCH
#define VK_EXT_SCALAR_BLOCK_LAYOUT_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_SCALAR_BLOCK_LAYOUT VK_EXT_scalar_block_layout && VK_EXT_SCALAR_BLOCK_LAYOUT_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_SCALAR_BLOCK_LAYOUT 0
#endif


#ifdef VK_KHR_fragment_shading_rate
#ifndef VK_KHR_FRAGMENT_SHADING_RATE_CUSTOM_SWITCH
#define VK_KHR_FRAGMENT_SHADING_RATE_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_FRAGMENT_SHADING_RATE VK_KHR_fragment_shading_rate && VK_KHR_FRAGMENT_SHADING_RATE_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_FRAGMENT_SHADING_RATE 0
#endif


#ifdef VK_EXT_validation_features
#ifndef VK_EXT_VALIDATION_FEATURES_CUSTOM_SWITCH
#define VK_EXT_VALIDATION_FEATURES_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_VALIDATION_FEATURES VK_EXT_validation_features && VK_EXT_VALIDATION_FEATURES_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_VALIDATION_FEATURES 0
#endif


#ifdef VK_EXT_line_rasterization
#ifndef VK_EXT_LINE_RASTERIZATION_CUSTOM_SWITCH
#define VK_EXT_LINE_RASTERIZATION_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_LINE_RASTERIZATION VK_EXT_line_rasterization && VK_EXT_LINE_RASTERIZATION_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_LINE_RASTERIZATION 0
#endif


#ifdef VK_QCOM_render_pass_transform
#ifndef VK_QCOM_RENDER_PASS_TRANSFORM_CUSTOM_SWITCH
#define VK_QCOM_RENDER_PASS_TRANSFORM_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_QCOM_RENDER_PASS_TRANSFORM VK_QCOM_render_pass_transform && VK_QCOM_RENDER_PASS_TRANSFORM_CUSTOM_SWITCH 
#else
#define ENABLE_VK_QCOM_RENDER_PASS_TRANSFORM 0
#endif


#ifdef VK_KHR_bind_memory2
#ifndef VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH
#define VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_BIND_MEMORY2 VK_KHR_bind_memory2 && VK_KHR_BIND_MEMORY2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_BIND_MEMORY2 0
#endif


#ifdef VK_KHR_get_memory_requirements2
#ifndef VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH
#define VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_MEMORY_REQUIREMENTS2 VK_KHR_get_memory_requirements2 && VK_KHR_GET_MEMORY_REQUIREMENTS2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_MEMORY_REQUIREMENTS2 0
#endif


#ifdef VK_KHR_get_surface_capabilities2
#ifndef VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH
#define VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_SURFACE_CAPABILITIES2 VK_KHR_get_surface_capabilities2 && VK_KHR_GET_SURFACE_CAPABILITIES2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_SURFACE_CAPABILITIES2 0
#endif


#ifdef VK_KHR_maintenance2
#ifndef VK_KHR_MAINTENANCE2_CUSTOM_SWITCH
#define VK_KHR_MAINTENANCE2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_MAINTENANCE2 VK_KHR_maintenance2 && VK_KHR_MAINTENANCE2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_MAINTENANCE2 0
#endif


#ifdef VK_KHR_storage_buffer_storage_class
#ifndef VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH
#define VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_STORAGE_BUFFER_STORAGE_CLASS VK_KHR_storage_buffer_storage_class && VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_STORAGE_BUFFER_STORAGE_CLASS 0
#endif


#ifdef VK_KHR_device_group_creation
#ifndef VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH
#define VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_DEVICE_GROUP_CREATION VK_KHR_device_group_creation && VK_KHR_DEVICE_GROUP_CREATION_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_DEVICE_GROUP_CREATION 0
#endif


#ifdef VK_KHR_get_physical_device_properties2
#ifndef VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH
#define VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2 VK_KHR_get_physical_device_properties2 && VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2_CUSTOM_SWITCH 
#else
#define ENABLE_VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES2 0
#endif


#ifdef VK_EXT_debug_report
#ifndef VK_EXT_DEBUG_REPORT_CUSTOM_SWITCH
#define VK_EXT_DEBUG_REPORT_CUSTOM_SWITCH 1
#endif
#define ENABLE_VK_EXT_DEBUG_REPORT VK_EXT_debug_report && VK_EXT_DEBUG_REPORT_CUSTOM_SWITCH 
#else
#define ENABLE_VK_EXT_DEBUG_REPORT 0
#endif

enum class EVulkanExtensionPlatform{
    all ,
	android ,
	win32 ,
};

enum class EVulkanExtensionIndex{
	VK_KHR_surface_index/*instance*/
	,VK_KHR_swapchain_index/*device*/
	,VK_KHR_display_index/*instance*/
#ifdef VK_USE_PLATFORM_ANDROID_KHR
	,VK_KHR_android_surface_index/*instance*/
#endif
#ifdef VK_USE_PLATFORM_WIN32_KHR
	,VK_KHR_win32_surface_index/*instance*/
#endif
	,VK_KHR_sampler_mirror_clamp_to_edge_index/*device*/
	,VK_IMG_filter_cubic_index/*device*/
	,VK_EXT_debug_marker_index/*device*/
	,VK_EXT_transform_feedback_index/*device*/
	,VK_KHR_multiview_index/*device*/
	,VK_KHR_get_physical_device_properties2_index/*instance*/
	,VK_KHR_device_group_index/*device*/
	,VK_KHR_shader_draw_parameters_index/*device*/
	,VK_EXT_astc_decode_mode_index/*device*/
	,VK_KHR_maintenance1_index/*device*/
	,VK_KHR_device_group_creation_index/*instance*/
	,VK_KHR_external_memory_capabilities_index/*instance*/
	,VK_KHR_external_memory_index/*device*/
	,VK_KHR_external_memory_fd_index/*device*/
	,VK_KHR_external_semaphore_capabilities_index/*instance*/
	,VK_KHR_external_semaphore_index/*device*/
	,VK_KHR_external_semaphore_fd_index/*device*/
	,VK_KHR_push_descriptor_index/*device*/
	,VK_KHR_shader_float16_int8_index/*device*/
	,VK_KHR_16bit_storage_index/*device*/
	,VK_KHR_incremental_present_index/*device*/
	,VK_KHR_descriptor_update_template_index/*device*/
	,VK_GOOGLE_display_timing_index/*device*/
	,VK_EXT_swapchain_colorspace_index/*instance*/
	,VK_EXT_hdr_metadata_index/*device*/
	,VK_KHR_create_renderpass2_index/*device*/
	,VK_KHR_shared_presentable_image_index/*device*/
	,VK_KHR_external_fence_capabilities_index/*instance*/
	,VK_KHR_external_fence_index/*device*/
	,VK_KHR_external_fence_fd_index/*device*/
	,VK_KHR_maintenance2_index/*device*/
	,VK_KHR_get_surface_capabilities2_index/*instance*/
	,VK_KHR_variable_pointers_index/*device*/
	,VK_EXT_queue_family_foreign_index/*device*/
	,VK_KHR_dedicated_allocation_index/*device*/
	,VK_EXT_sampler_filter_minmax_index/*device*/
	,VK_KHR_storage_buffer_storage_class_index/*device*/
	,VK_EXT_sample_locations_index/*device*/
	,VK_KHR_relaxed_block_layout_index/*device*/
	,VK_KHR_get_memory_requirements2_index/*device*/
	,VK_KHR_image_format_list_index/*device*/
	,VK_KHR_sampler_ycbcr_conversion_index/*device*/
	,VK_KHR_bind_memory2_index/*device*/
	,VK_EXT_validation_cache_index/*device*/
	,VK_KHR_maintenance3_index/*device*/
	,VK_KHR_draw_indirect_count_index/*device*/
	,VK_EXT_filter_cubic_index/*device*/
	,VK_EXT_global_priority_index/*device*/
	,VK_EXT_pipeline_creation_feedback_index/*device*/
	,VK_KHR_driver_properties_index/*device*/
	,VK_KHR_shader_float_controls_index/*device*/
	,VK_KHR_depth_stencil_resolve_index/*device*/
	,VK_KHR_vulkan_memory_model_index/*device*/
	,VK_EXT_fragment_density_map_index/*device*/
	,VK_EXT_scalar_block_layout_index/*device*/
	,VK_KHR_fragment_shading_rate_index/*device*/
	,VK_EXT_validation_features_index/*instance*/
	,VK_EXT_line_rasterization_index/*device*/
	,VK_QCOM_render_pass_transform_index/*device*/
	,VK_EXT_debug_report_index/*instance*/
	,Count
	,None
};

enum class EVulkanExtensionType{
    instance,
    device
};

struct VulkanExtension{
    static constexpr int kMaxInstanceRequires=8;
    bool                     enabled;
    EVulkanExtensionType     type;
    EVulkanExtensionIndex    index;
    char const*              extensionName;
    EVulkanExtensionPlatform platform;
    EVulkanExtensionIndex    requireIndices[kMaxInstanceRequires];
};
 
inline static VulkanExtension GDefaultExtensions[(int)EVulkanExtensionIndex::Count]={
		{ (bool)VK_KHR_surface, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_surface_index,  VK_KHR_SURFACE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_swapchain, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_swapchain_index,  VK_KHR_SWAPCHAIN_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_display, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_display_index,  VK_KHR_DISPLAY_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
#ifdef VK_USE_PLATFORM_ANDROID_KHR
		,{ (bool)VK_KHR_android_surface, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_android_surface_index,  VK_KHR_ANDROID_SURFACE_EXTENSION_NAME, EVulkanExtensionPlatform::android, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
#endif
#ifdef VK_USE_PLATFORM_WIN32_KHR
		,{ (bool)VK_KHR_win32_surface, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_win32_surface_index,  VK_KHR_WIN32_SURFACE_EXTENSION_NAME, EVulkanExtensionPlatform::win32, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
#endif
		,{ (bool)VK_KHR_sampler_mirror_clamp_to_edge, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_sampler_mirror_clamp_to_edge_index,  VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_IMG_filter_cubic, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_IMG_filter_cubic_index,  VK_IMG_FILTER_CUBIC_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_debug_marker, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_debug_marker_index,  VK_EXT_DEBUG_MARKER_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_EXT_debug_report_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_transform_feedback, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_transform_feedback_index,  VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_multiview, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_multiview_index,  VK_KHR_MULTIVIEW_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_get_physical_device_properties2, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index,  VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_device_group, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_device_group_index,  VK_KHR_DEVICE_GROUP_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_device_group_creation_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_shader_draw_parameters, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_shader_draw_parameters_index,  VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_astc_decode_mode, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_astc_decode_mode_index,  VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_maintenance1, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_maintenance1_index,  VK_KHR_MAINTENANCE_1_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_device_group_creation, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_device_group_creation_index,  VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_memory_capabilities, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_external_memory_capabilities_index,  VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_memory, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_memory_index,  VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_memory_capabilities_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_memory_fd, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_memory_fd_index,  VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_memory_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_semaphore_capabilities, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_external_semaphore_capabilities_index,  VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_semaphore, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_semaphore_index,  VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_semaphore_capabilities_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_semaphore_fd, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_semaphore_fd_index,  VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_semaphore_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_push_descriptor, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_push_descriptor_index,  VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_shader_float16_int8, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_shader_float16_int8_index,  VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_16bit_storage, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_16bit_storage_index,  VK_KHR_16BIT_STORAGE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::VK_KHR_storage_buffer_storage_class_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_incremental_present, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_incremental_present_index,  VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_swapchain_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_descriptor_update_template, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_descriptor_update_template_index,  VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_GOOGLE_display_timing, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_GOOGLE_display_timing_index,  VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_swapchain_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_swapchain_colorspace, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_EXT_swapchain_colorspace_index,  VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_hdr_metadata, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_hdr_metadata_index,  VK_EXT_HDR_METADATA_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_swapchain_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_create_renderpass2, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_create_renderpass2_index,  VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_multiview_index, EVulkanExtensionIndex::VK_KHR_maintenance2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_shared_presentable_image, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_shared_presentable_image_index,  VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_swapchain_index, EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::VK_KHR_get_surface_capabilities2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_fence_capabilities, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_external_fence_capabilities_index,  VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_fence, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_fence_index,  VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_fence_capabilities_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_external_fence_fd, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_external_fence_fd_index,  VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_fence_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_maintenance2, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_maintenance2_index,  VK_KHR_MAINTENANCE_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_get_surface_capabilities2, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_KHR_get_surface_capabilities2_index,  VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_variable_pointers, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_variable_pointers_index,  VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::VK_KHR_storage_buffer_storage_class_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_queue_family_foreign, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_queue_family_foreign_index,  VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_external_memory_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_dedicated_allocation, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_dedicated_allocation_index,  VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_memory_requirements2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_sampler_filter_minmax, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_sampler_filter_minmax_index,  VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_storage_buffer_storage_class, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_storage_buffer_storage_class_index,  VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_sample_locations, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_sample_locations_index,  VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_relaxed_block_layout, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_relaxed_block_layout_index,  VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_get_memory_requirements2, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_get_memory_requirements2_index,  VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_image_format_list, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_image_format_list_index,  VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_sampler_ycbcr_conversion, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_sampler_ycbcr_conversion_index,  VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_maintenance1_index, EVulkanExtensionIndex::VK_KHR_bind_memory2_index, EVulkanExtensionIndex::VK_KHR_get_memory_requirements2_index, EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_bind_memory2, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_bind_memory2_index,  VK_KHR_BIND_MEMORY_2_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_validation_cache, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_validation_cache_index,  VK_EXT_VALIDATION_CACHE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_maintenance3, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_maintenance3_index,  VK_KHR_MAINTENANCE_3_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_draw_indirect_count, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_draw_indirect_count_index,  VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_filter_cubic, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_filter_cubic_index,  VK_EXT_FILTER_CUBIC_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_global_priority, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_global_priority_index,  VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_pipeline_creation_feedback, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_pipeline_creation_feedback_index,  VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_driver_properties, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_driver_properties_index,  VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_shader_float_controls, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_shader_float_controls_index,  VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_depth_stencil_resolve, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_depth_stencil_resolve_index,  VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_create_renderpass2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_vulkan_memory_model, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_vulkan_memory_model_index,  VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_fragment_density_map, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_fragment_density_map_index,  VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_scalar_block_layout, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_scalar_block_layout_index,  VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_KHR_fragment_shading_rate, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_KHR_fragment_shading_rate_index,  VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_create_renderpass2_index, EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_validation_features, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_EXT_validation_features_index,  VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_line_rasterization, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_EXT_line_rasterization_index,  VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_QCOM_render_pass_transform, EVulkanExtensionType::device, EVulkanExtensionIndex::VK_QCOM_render_pass_transform_index,  VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::VK_KHR_swapchain_index, EVulkanExtensionIndex::VK_KHR_surface_index, EVulkanExtensionIndex::None} }
		,{ (bool)VK_EXT_debug_report, EVulkanExtensionType::instance, EVulkanExtensionIndex::VK_EXT_debug_report_index,  VK_EXT_DEBUG_REPORT_EXTENSION_NAME, EVulkanExtensionPlatform::all, { EVulkanExtensionIndex::None} }
};
constexpr EVulkanExtensionIndex kInstanceExtensionIndices[]={
		EVulkanExtensionIndex::VK_KHR_surface_index
		,EVulkanExtensionIndex::VK_KHR_display_index
#ifdef VK_USE_PLATFORM_ANDROID_KHR
		,EVulkanExtensionIndex::VK_KHR_android_surface_index
#endif
#ifdef VK_USE_PLATFORM_WIN32_KHR
		,EVulkanExtensionIndex::VK_KHR_win32_surface_index
#endif
		,EVulkanExtensionIndex::VK_KHR_get_physical_device_properties2_index
		,EVulkanExtensionIndex::VK_KHR_device_group_creation_index
		,EVulkanExtensionIndex::VK_KHR_external_memory_capabilities_index
		,EVulkanExtensionIndex::VK_KHR_external_semaphore_capabilities_index
		,EVulkanExtensionIndex::VK_EXT_swapchain_colorspace_index
		,EVulkanExtensionIndex::VK_KHR_external_fence_capabilities_index
		,EVulkanExtensionIndex::VK_KHR_get_surface_capabilities2_index
		,EVulkanExtensionIndex::VK_EXT_validation_features_index
		,EVulkanExtensionIndex::VK_EXT_debug_report_index
};
constexpr EVulkanExtensionIndex kDeviceExtensionIndices[]={
		EVulkanExtensionIndex::VK_KHR_swapchain_index
		,EVulkanExtensionIndex::VK_KHR_sampler_mirror_clamp_to_edge_index
		,EVulkanExtensionIndex::VK_IMG_filter_cubic_index
		,EVulkanExtensionIndex::VK_EXT_debug_marker_index
		,EVulkanExtensionIndex::VK_EXT_transform_feedback_index
		,EVulkanExtensionIndex::VK_KHR_multiview_index
		,EVulkanExtensionIndex::VK_KHR_device_group_index
		,EVulkanExtensionIndex::VK_KHR_shader_draw_parameters_index
		,EVulkanExtensionIndex::VK_EXT_astc_decode_mode_index
		,EVulkanExtensionIndex::VK_KHR_maintenance1_index
		,EVulkanExtensionIndex::VK_KHR_external_memory_index
		,EVulkanExtensionIndex::VK_KHR_external_memory_fd_index
		,EVulkanExtensionIndex::VK_KHR_external_semaphore_index
		,EVulkanExtensionIndex::VK_KHR_external_semaphore_fd_index
		,EVulkanExtensionIndex::VK_KHR_push_descriptor_index
		,EVulkanExtensionIndex::VK_KHR_shader_float16_int8_index
		,EVulkanExtensionIndex::VK_KHR_16bit_storage_index
		,EVulkanExtensionIndex::VK_KHR_incremental_present_index
		,EVulkanExtensionIndex::VK_KHR_descriptor_update_template_index
		,EVulkanExtensionIndex::VK_GOOGLE_display_timing_index
		,EVulkanExtensionIndex::VK_EXT_hdr_metadata_index
		,EVulkanExtensionIndex::VK_KHR_create_renderpass2_index
		,EVulkanExtensionIndex::VK_KHR_shared_presentable_image_index
		,EVulkanExtensionIndex::VK_KHR_external_fence_index
		,EVulkanExtensionIndex::VK_KHR_external_fence_fd_index
		,EVulkanExtensionIndex::VK_KHR_maintenance2_index
		,EVulkanExtensionIndex::VK_KHR_variable_pointers_index
		,EVulkanExtensionIndex::VK_EXT_queue_family_foreign_index
		,EVulkanExtensionIndex::VK_KHR_dedicated_allocation_index
		,EVulkanExtensionIndex::VK_EXT_sampler_filter_minmax_index
		,EVulkanExtensionIndex::VK_KHR_storage_buffer_storage_class_index
		,EVulkanExtensionIndex::VK_EXT_sample_locations_index
		,EVulkanExtensionIndex::VK_KHR_relaxed_block_layout_index
		,EVulkanExtensionIndex::VK_KHR_get_memory_requirements2_index
		,EVulkanExtensionIndex::VK_KHR_image_format_list_index
		,EVulkanExtensionIndex::VK_KHR_sampler_ycbcr_conversion_index
		,EVulkanExtensionIndex::VK_KHR_bind_memory2_index
		,EVulkanExtensionIndex::VK_EXT_validation_cache_index
		,EVulkanExtensionIndex::VK_KHR_maintenance3_index
		,EVulkanExtensionIndex::VK_KHR_draw_indirect_count_index
		,EVulkanExtensionIndex::VK_EXT_filter_cubic_index
		,EVulkanExtensionIndex::VK_EXT_global_priority_index
		,EVulkanExtensionIndex::VK_EXT_pipeline_creation_feedback_index
		,EVulkanExtensionIndex::VK_KHR_driver_properties_index
		,EVulkanExtensionIndex::VK_KHR_shader_float_controls_index
		,EVulkanExtensionIndex::VK_KHR_depth_stencil_resolve_index
		,EVulkanExtensionIndex::VK_KHR_vulkan_memory_model_index
		,EVulkanExtensionIndex::VK_EXT_fragment_density_map_index
		,EVulkanExtensionIndex::VK_EXT_scalar_block_layout_index
		,EVulkanExtensionIndex::VK_KHR_fragment_shading_rate_index
		,EVulkanExtensionIndex::VK_EXT_line_rasterization_index
		,EVulkanExtensionIndex::VK_QCOM_render_pass_transform_index
};
constexpr int kInstanceExtensionCount = sizeof(kInstanceExtensionIndices) / sizeof(EVulkanExtensionIndex);
constexpr int kDeviceExtensionCount = sizeof(kDeviceExtensionIndices) / sizeof(EVulkanExtensionIndex);

template<typename Filter, typename Call>
inline void ForeachVulkanExtension(Filter&& filter, Call call){
    for(int i=0; i<kInstanceExtensionCount; ++i){
        int index = (int) kInstanceExtensionIndices[i];
        if(filter(GDefaultExtensions[index])){
            call(GDefaultExtensions[index]);
        }
    }
    for(int i=0; i<kDeviceExtensionCount; ++i){
        int index = (int) kDeviceExtensionIndices[i];
        if(filter(GDefaultExtensions[index])){
            call(GDefaultExtensions[index]);
        }
    }
}

inline void GetVulkanInstanceExtensionStrings(std::vector<char const*>& extensions){
    for(int i=0; i<kInstanceExtensionCount; ++i){
        int index = (int) kInstanceExtensionIndices[i];
        extensions.emplace_back(GDefaultExtensions[index].extensionName);
    }
	extensions.emplace_back("VK_EXT_debug_utils");
}

inline void GetVulkanDeviceExtensionStrings(std::vector<char const*>& extensions){
    for(int i=0; i<kDeviceExtensionCount; ++i){
        int index = (int) kDeviceExtensionIndices[i];
        extensions.emplace_back(GDefaultExtensions[index].extensionName);
    }
}

inline VulkanExtension& GetVulkanExtension(EVulkanExtensionIndex Enum){
    int ienum = (int)Enum;
    ARCheck(ienum<(int)EVulkanExtensionIndex::Count);
    return GDefaultExtensions[ienum];
}

#define GVulkanExtension(ExtensionName) GetVulkanExtension( EVulkanExtensionIndex::ExtensionName ## _index )
#define IsVkExtensionEnabled(ExtensionName) GetVulkanExtension( EVulkanExtensionIndex::ExtensionName ## _index ).enabled
